{"id":"0bdfe53fe0c8cfd723f450caa8a53a0f","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/IntentxFeeRebate.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\n\npragma solidity 0.8.18;\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\ncontract IntentXFeeRebate is OwnableUpgradeable {\n    using ECDSA for bytes32;\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    // Constants and state variables\n    address public intentxTrustedAddress; // IntentX Trusted Address\n    uint public startTimestamp;\n    uint public totalReward;\n\n    mapping(address => uint256) public claimed; // Mapping of user's claimed balance.\n\n    // Events\n    event Reward(uint256 timestamp, uint256 amount);\n    event Claim(address indexed user, uint256 timestamp, uint256 amount);\n    event SetIntentXTrustedAddress(address indexed intentxTrustedAddress);\n\n    // Errors\n\n    error DayNotFinished();\n    error InvalidSignature();\n\n    /// @notice Initialize the contract\n    function initialize(\n        address _intentxTrustedAddress\n    ) public initializer {\n        __Ownable_init();\n\n        intentxTrustedAddress = _intentxTrustedAddress;\n        startTimestamp = block.timestamp;\n\n        emit SetIntentXTrustedAddress(_intentxTrustedAddress);\n    }\n\n    /// @notice Set the reward token\n    /// @param _intentxTrustedAddress address of the new IntentX Trusted Backend\n    function setIntentxTrustedAddress(address _intentxTrustedAddress) external onlyOwner() {\n        intentxTrustedAddress = _intentxTrustedAddress;\n        emit SetIntentXTrustedAddress(_intentxTrustedAddress);\n    }\n\n    /// @notice Fill reward for a given day from the token contract\n    /// @param _amount amount of reward to fill\n    function fill(uint256 _amount) external payable {\n        require(_amount == msg.value, \"Not enough amount sent\");\n        totalReward += _amount;\n        emit Reward(block.timestamp, _amount);\n    }\n\n    function claim(\n        address _user,\n        uint256 _amountMnt,\n        uint256 _timestamp,\n        bytes memory signature\n    ) external {\n        require(block.timestamp >= startTimestamp, \"NOT STARTED\");\n        require( msg.sender == _user, \"Not your claim\");\n        require( intentxTrustedAddress != address(0), \"IntentX Trusted Address not set yet.\");\n\n        if ( _amountMnt > claimed[msg.sender] ) {\n            \n            bytes32 messageHash = getMessageHash( _user, _amountMnt, _timestamp);\n            bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\n\n            require( recoverSigner(ethSignedMessageHash, signature) == intentxTrustedAddress, \"Signer =! Trusted. \");\n            \n            uint256 withdrawableAmount = _amountMnt - claimed[msg.sender];\n            claimed[msg.sender] = _amountMnt;\n\n            (msg.sender, withdrawableAmount);\n\n            emit Claim(msg.sender, block.timestamp , withdrawableAmount);\n        }\n    }\n\n    function getMessageHash(\n        address _user,\n        uint _amountIntentX,\n        uint _timestamp\n    ) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(_user, _amountIntentX, _timestamp));\n    }\n\n    function getEthSignedMessageHash(bytes32 _messageHash)\n        public\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash)\n            );\n    }\n\n\n    function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)\n        public\n        pure\n        returns (address)\n    {\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\n\n        return ecrecover(_ethSignedMessageHash, v, r, s);\n    }\n\n    function splitSignature(bytes memory sig)\n        public\n        pure\n        returns (\n            bytes32 r,\n            bytes32 s,\n            uint8 v\n        )\n    {\n        require(sig.length == 65, \"invalid signature length\");\n\n        assembly {\n            r := mload(add(sig, 32))\n            s := mload(add(sig, 64))\n            v := byte(0, mload(add(sig, 96)))\n        }\n    }\n\n}"}},"settings":{"optimizer":{"enabled":true,"runs":2048},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1172],"Initializable":[301],"OwnableUpgradeable":[132]},"id":133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":1173,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":302,"src":"169:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"177:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nameLocations":["769:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"769:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"769:13:0"},{"baseName":{"id":8,"name":"ContextUpgradeable","nameLocations":["784:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1172,"src":"784:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"784:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"234:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":132,"linearizedBaseContracts":[132,1172,301],"name":"OwnableUpgradeable","nameLocation":"747:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_owner","nameLocation":"825:6:0","nodeType":"VariableDeclaration","scope":132,"src":"809:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":17,"name":"OwnershipTransferred","nameLocation":"844:20:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:0","nodeType":"VariableDeclaration","scope":17,"src":"865:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:0","nodeType":"VariableDeclaration","scope":17,"src":"896:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:0"},"src":"838:84:0"},{"body":{"id":26,"nodeType":"Block","src":"1076:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1086:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"1086:26:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"928:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nameLocations":["1059:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1059:16:0"},"nodeType":"ModifierInvocation","src":"1059:16:0"}],"name":"__Ownable_init","nameLocation":"1033:14:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"1047:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":132,"src":"1024:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"1187:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":33,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1216:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":32,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1197:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"1197:32:0"}]},"id":38,"implemented":true,"kind":"function","modifiers":[{"id":30,"kind":"modifierInvocation","modifierName":{"id":29,"name":"onlyInitializing","nameLocations":["1170:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1170:16:0"},"nodeType":"ModifierInvocation","src":"1170:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"1158:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1187:0:0"},"scope":132,"src":"1125:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":45,"nodeType":"Block","src":"1345:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1355:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1355:13:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1378:1:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1242:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1333:9:0","nodeType":"ModifierDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"1342:2:0"},"src":"1324:62:0","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"1517:30:0","statements":[{"expression":{"id":52,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":51,"id":53,"nodeType":"Return","src":"1527:13:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1392:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1476:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1508:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:0"},"scope":132,"src":"1462:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":68,"nodeType":"Block","src":"1665:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":60,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1683:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":62,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"1694:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":59,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"1675:68:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1553:62:0","text":" @dev Throws if the sender is not the owner."},"id":69,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1640:2:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1665:0:0"},"scope":132,"src":"1620:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":82,"nodeType":"Block","src":"2139:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":77,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:0","typeDescriptions":{}}},"id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":75,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2149:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2149:30:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1756:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":83,"implemented":true,"kind":"function","modifiers":[{"id":73,"kind":"modifierInvocation","modifierName":{"id":72,"name":"onlyOwner","nameLocations":["2129:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2129:9:0"},"nodeType":"ModifierInvocation","src":"2129:9:0"}],"name":"renounceOwnership","nameLocation":"2094:17:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"2111:2:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"2139:0:0"},"scope":132,"src":"2085:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":105,"nodeType":"Block","src":"2405:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":92,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2423:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":94,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:0","typeDescriptions":{}}},"id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":91,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"ExpressionStatement","src":"2415:73:0"},{"expression":{"arguments":[{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2517:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2498:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":104,"nodeType":"ExpressionStatement","src":"2498:28:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2192:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":106,"implemented":true,"kind":"function","modifiers":[{"id":89,"kind":"modifierInvocation","modifierName":{"id":88,"name":"onlyOwner","nameLocations":["2395:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2395:9:0"},"nodeType":"ModifierInvocation","src":"2395:9:0"}],"name":"transferOwnership","nameLocation":"2344:17:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:0","nodeType":"VariableDeclaration","scope":106,"src":"2362:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:0"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"2405:0:0"},"scope":132,"src":"2335:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2750:124:0","statements":[{"assignments":[113],"declarations":[{"constant":false,"id":113,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":115,"initialValue":{"id":114,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2779:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:0"},{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":116,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2795:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":117,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2804:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":119,"nodeType":"ExpressionStatement","src":"2795:17:0"},{"eventCall":{"arguments":[{"id":121,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2848:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2858:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":120,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2827:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"EmitStatement","src":"2822:45:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"2539:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":126,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2715:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"2750:0:0"},"scope":132,"src":"2687:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2880:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":131,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:0","nodeType":"VariableDeclaration","scope":132,"src":"3139:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":130,"length":{"hexValue":"3439","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":133,"src":"729:2438:0","usedErrors":[]}],"src":"102:3066:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1121],"Initializable":[301]},"id":302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":134,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":302,"sourceUnit":1122,"src":"138:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"184:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":301,"linearizedBaseContracts":[301],"name":"Initializable","nameLocation":"2412:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"2432:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":139,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:1","nodeType":"VariableDeclaration","scope":301,"src":"2546:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":138,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"2579:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":142,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:1","nodeType":"VariableDeclaration","scope":301,"src":"2675:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2708:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":147,"name":"Initialized","nameLocation":"2809:11:1","nodeType":"EventDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":147,"src":"2821:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":144,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:1"},"src":"2803:33:1"},{"body":{"id":202,"nodeType":"Block","src":"3269:483:1","statements":[{"assignments":[151],"declarations":[{"constant":false,"id":151,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:1","nodeType":"VariableDeclaration","scope":202,"src":"3279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":150,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":154,"initialValue":{"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:1","subExpression":{"id":152,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3302:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":156,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3347:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3365:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:1","subExpression":{"arguments":[{"arguments":[{"id":166,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$301","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$301","typeString":"contract Initializable"}],"id":165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:1","typeDescriptions":{}}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":162,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"3388:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1121_$","typeString":"type(library AddressUpgradeable)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":809,"src":"3388:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3436:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"3325:201:1"},{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3536:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":182,"nodeType":"ExpressionStatement","src":"3536:16:1"},{"condition":{"id":183,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3566:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":189,"nodeType":"IfStatement","src":"3562:65:1","trueBody":{"id":188,"nodeType":"Block","src":"3582:45:1","statements":[{"expression":{"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":184,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3596:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"3596:20:1"}]}},{"id":190,"nodeType":"PlaceholderStatement","src":"3636:1:1"},{"condition":{"id":191,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3651:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":201,"nodeType":"IfStatement","src":"3647:99:1","trueBody":{"id":200,"nodeType":"Block","src":"3667:79:1","statements":[{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":192,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3681:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":195,"nodeType":"ExpressionStatement","src":"3681:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":196,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3721:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"EmitStatement","src":"3716:19:1"}]}}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"2842:399:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":203,"name":"initializer","nameLocation":"3255:11:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"3266:2:1"},"src":"3246:506:1","virtual":false,"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"4863:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:1","subExpression":{"id":209,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"4882:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":211,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"4899:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":212,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4914:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"4873:99:1"},{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":218,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"4982:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":219,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4997:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":221,"nodeType":"ExpressionStatement","src":"4982:22:1"},{"expression":{"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":222,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5014:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"ExpressionStatement","src":"5014:20:1"},{"id":226,"nodeType":"PlaceholderStatement","src":"5044:1:1"},{"expression":{"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":227,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5055:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"5055:21:1"},{"eventCall":{"arguments":[{"id":232,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"5103:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":231,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"5091:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":234,"nodeType":"EmitStatement","src":"5086:25:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"3758:1062:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":236,"name":"reinitializer","nameLocation":"4834:13:1","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"version","nameLocation":"4854:7:1","nodeType":"VariableDeclaration","scope":236,"src":"4848:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":205,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:1"},"src":"4825:293:1","virtual":false,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"5356:97:1","statements":[{"expression":{"arguments":[{"id":240,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5374:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"5366:69:1"},{"id":244,"nodeType":"PlaceholderStatement","src":"5445:1:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"5124:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":246,"name":"onlyInitializing","nameLocation":"5337:16:1","nodeType":"ModifierDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"5353:2:1"},"src":"5328:125:1","virtual":false,"visibility":"internal"},{"body":{"id":281,"nodeType":"Block","src":"5988:231:1","statements":[{"expression":{"arguments":[{"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:1","subExpression":{"id":251,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"6007:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"5998:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"6078:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":258,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":257,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:1","memberName":"max","nodeType":"MemberAccess","src":"6094:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":280,"nodeType":"IfStatement","src":"6074:139:1","trueBody":{"id":279,"nodeType":"Block","src":"6111:102:1","statements":[{"expression":{"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":263,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"6125:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":265,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:1","memberName":"max","nodeType":"MemberAccess","src":"6140:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":270,"nodeType":"ExpressionStatement","src":"6125:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":273,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:1","memberName":"max","nodeType":"MemberAccess","src":"6186:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":271,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"6174:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"EmitStatement","src":"6169:33:1"}]}}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"5459:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:1","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"5968:2:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[],"src":"5988:0:1"},"scope":301,"src":"5939:280:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"6393:36:1","statements":[{"expression":{"id":288,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"6410:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":287,"id":289,"nodeType":"Return","src":"6403:19:1"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"6225:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"6360:2:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"6386:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":285,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:1"},"scope":301,"src":"6329:100:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":299,"nodeType":"Block","src":"6601:37:1","statements":[{"expression":{"id":297,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"6618:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":296,"id":298,"nodeType":"Return","src":"6611:20:1"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"6435:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:1","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"6569:2:1"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"6595:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":294,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:1"},"scope":301,"src":"6545:93:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":302,"src":"2394:4246:1","usedErrors":[]}],"src":"113:6528:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":303,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IERC20Upgradeable","nameLocation":"212:17:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"236:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":313,"name":"Transfer","nameLocation":"405:8:2","nodeType":"EventDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:2","nodeType":"VariableDeclaration","scope":313,"src":"414:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:2","nodeType":"VariableDeclaration","scope":313,"src":"436:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:2","nodeType":"VariableDeclaration","scope":313,"src":"456:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:2"},"src":"399:72:2"},{"anonymous":false,"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"477:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":322,"name":"Approval","nameLocation":"636:8:2","nodeType":"EventDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:2","nodeType":"VariableDeclaration","scope":322,"src":"645:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:2","nodeType":"VariableDeclaration","scope":322,"src":"668:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:2","nodeType":"VariableDeclaration","scope":322,"src":"693:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:2"},"src":"630:78:2"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"714:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":328,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:2","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[],"src":"805:2:2"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":328,"src":"831:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:2"},"scope":379,"src":"785:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"846:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:2","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"account","nameLocation":"950:7:2","nodeType":"VariableDeclaration","scope":336,"src":"942:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:2"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"982:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:2"},"scope":379,"src":"923:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"997:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":346,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"amount","nameLocation":"1242:6:2","nodeType":"VariableDeclaration","scope":346,"src":"1234:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:2"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1268:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:2"},"scope":379,"src":"1204:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1280:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":356,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:2","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"owner","nameLocation":"1576:5:2","nodeType":"VariableDeclaration","scope":356,"src":"1568:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"spender","nameLocation":"1591:7:2","nodeType":"VariableDeclaration","scope":356,"src":"1583:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"1623:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:2"},"scope":379,"src":"1549:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"1638:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"spender","nameLocation":"2310:7:2","nodeType":"VariableDeclaration","scope":366,"src":"2302:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"amount","nameLocation":"2327:6:2","nodeType":"VariableDeclaration","scope":366,"src":"2319:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:2"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"2353:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:2"},"scope":379,"src":"2285:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2365:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:2","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"from","nameLocation":"2687:4:2","nodeType":"VariableDeclaration","scope":378,"src":"2679:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"to","nameLocation":"2701:2:2","nodeType":"VariableDeclaration","scope":378,"src":"2693:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"amount","nameLocation":"2713:6:2","nodeType":"VariableDeclaration","scope":378,"src":"2705:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"2739:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":375,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:2"},"scope":379,"src":"2657:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"202:2545:2","usedErrors":[]}],"src":"106:2642:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[415]},"id":416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"148:1963:3","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":415,"linearizedBaseContracts":[415],"name":"IERC20PermitUpgradeable","nameLocation":"2122:23:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"2152:850:3","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":400,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3016:6:3","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"owner","nameLocation":"3040:5:3","nodeType":"VariableDeclaration","scope":400,"src":"3032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"3032:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"spender","nameLocation":"3063:7:3","nodeType":"VariableDeclaration","scope":400,"src":"3055:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"value","nameLocation":"3088:5:3","nodeType":"VariableDeclaration","scope":400,"src":"3080:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"deadline","nameLocation":"3111:8:3","nodeType":"VariableDeclaration","scope":400,"src":"3103:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"v","nameLocation":"3135:1:3","nodeType":"VariableDeclaration","scope":400,"src":"3129:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":392,"name":"uint8","nodeType":"ElementaryTypeName","src":"3129:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"r","nameLocation":"3154:1:3","nodeType":"VariableDeclaration","scope":400,"src":"3146:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3146:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"s","nameLocation":"3173:1:3","nodeType":"VariableDeclaration","scope":400,"src":"3165:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3165:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3022:158:3"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"3189:0:3"},"scope":415,"src":"3007:183:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"3196:294:3","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3504:6:3","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"owner","nameLocation":"3519:5:3","nodeType":"VariableDeclaration","scope":408,"src":"3511:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3510:15:3"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"3549:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3549:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3548:9:3"},"scope":415,"src":"3495:63:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"3564:128:3","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":414,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3759:16:3","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"3775:2:3"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"3801:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3801:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3800:9:3"},"scope":415,"src":"3750:60:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":416,"src":"2112:1700:3","usedErrors":[]}],"src":"123:3690:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1121],"IERC20PermitUpgradeable":[415],"IERC20Upgradeable":[379],"SafeERC20Upgradeable":[791]},"id":792,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":417,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":792,"sourceUnit":380,"src":"140:34:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","file":"../extensions/IERC20PermitUpgradeable.sol","id":419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":792,"sourceUnit":416,"src":"175:51:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../../utils/AddressUpgradeable.sol","id":420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":792,"sourceUnit":1122,"src":"227:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20Upgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"276:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":791,"linearizedBaseContracts":[791],"name":"SafeERC20Upgradeable","nameLocation":"742:20:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":424,"libraryName":{"id":422,"name":"AddressUpgradeable","nameLocations":["775:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1121,"src":"775:18:4"},"nodeType":"UsingForDirective","src":"769:37:4","typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":447,"nodeType":"Block","src":"1079:103:4","statements":[{"expression":{"arguments":[{"id":436,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"1109:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":439,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"1139:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1145:8:4","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":346,"src":"1139:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1154:8:4","memberName":"selector","nodeType":"MemberAccess","src":"1139:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1164:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1168:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":437,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1116:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1120:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1116:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":435,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1089:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1089:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"1089:86:4"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"812:179:4","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":448,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1005:12:4","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"token","nameLocation":"1036:5:4","nodeType":"VariableDeclaration","scope":448,"src":"1018:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"IERC20Upgradeable","nameLocations":["1018:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"1018:17:4"},"referencedDeclaration":379,"src":"1018:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"to","nameLocation":"1051:2:4","nodeType":"VariableDeclaration","scope":448,"src":"1043:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"value","nameLocation":"1063:5:4","nodeType":"VariableDeclaration","scope":448,"src":"1055:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:52:4"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"1079:0:4"},"scope":791,"src":"996:186:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"1522:113:4","statements":[{"expression":{"arguments":[{"id":462,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1552:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1582:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1588:12:4","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":378,"src":"1582:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1601:8:4","memberName":"selector","nodeType":"MemberAccess","src":"1582:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"1611:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"1617:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"1621:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":463,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1559:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1563:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1559:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1559:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":461,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1532:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"1532:96:4"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1188:228:4","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1430:16:4","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"token","nameLocation":"1465:5:4","nodeType":"VariableDeclaration","scope":475,"src":"1447:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"IERC20Upgradeable","nameLocations":["1447:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"1447:17:4"},"referencedDeclaration":379,"src":"1447:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"from","nameLocation":"1480:4:4","nodeType":"VariableDeclaration","scope":475,"src":"1472:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"to","nameLocation":"1494:2:4","nodeType":"VariableDeclaration","scope":475,"src":"1486:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"value","nameLocation":"1506:5:4","nodeType":"VariableDeclaration","scope":475,"src":"1498:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1446:66:4"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"1522:0:4"},"scope":791,"src":"1421:214:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"1982:497:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2231:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2240:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2231:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2230:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":495,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2271:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$791","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$791","typeString":"library SafeERC20Upgradeable"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2263:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:4","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2278:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2247:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2253:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":356,"src":"2247:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2290:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2247:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2230:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2306:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2209:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:163:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"ExpressionStatement","src":"2209:163:4"},{"expression":{"arguments":[{"id":507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2402:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":510,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2432:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"2432:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2446:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2432:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":513,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2456:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2465:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":508,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2409:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2413:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2409:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":506,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2382:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"ExpressionStatement","src":"2382:90:4"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1641:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1904:11:4","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"token","nameLocation":"1934:5:4","nodeType":"VariableDeclaration","scope":519,"src":"1916:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"IERC20Upgradeable","nameLocations":["1916:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"1916:17:4"},"referencedDeclaration":379,"src":"1916:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"spender","nameLocation":"1949:7:4","nodeType":"VariableDeclaration","scope":519,"src":"1941:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"1941:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"value","nameLocation":"1966:5:4","nodeType":"VariableDeclaration","scope":519,"src":"1958:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1915:57:4"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"1982:0:4"},"scope":791,"src":"1895:584:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"2767:194:4","statements":[{"assignments":[531],"declarations":[{"constant":false,"id":531,"mutability":"mutable","name":"oldAllowance","nameLocation":"2785:12:4","nodeType":"VariableDeclaration","scope":555,"src":"2777:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":540,"initialValue":{"arguments":[{"arguments":[{"id":536,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2824:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$791","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$791","typeString":"library SafeERC20Upgradeable"}],"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2816:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"2816:7:4","typeDescriptions":{}}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":538,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2831:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":532,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2800:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":356,"src":"2800:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2800:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2777:62:4"},{"expression":{"arguments":[{"id":542,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2869:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":545,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2899:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2905:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"2899:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2913:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2899:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":548,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2923:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":549,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2932:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2947:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":543,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2876:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2880:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2876:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2876:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":541,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2849:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:105:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"2849:105:4"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"2485:180:4","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2679:21:4","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"token","nameLocation":"2719:5:4","nodeType":"VariableDeclaration","scope":556,"src":"2701:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":522,"nodeType":"UserDefinedTypeName","pathNode":{"id":521,"name":"IERC20Upgradeable","nameLocations":["2701:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2701:17:4"},"referencedDeclaration":379,"src":"2701:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"spender","nameLocation":"2734:7:4","nodeType":"VariableDeclaration","scope":556,"src":"2726:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"value","nameLocation":"2751:5:4","nodeType":"VariableDeclaration","scope":556,"src":"2743:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2700:57:4"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"2767:0:4"},"scope":791,"src":"2670:291:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"3249:321:4","statements":[{"id":599,"nodeType":"UncheckedBlock","src":"3259:305:4","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"oldAllowance","nameLocation":"3291:12:4","nodeType":"VariableDeclaration","scope":599,"src":"3283:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":577,"initialValue":{"arguments":[{"arguments":[{"id":573,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3330:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$791","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$791","typeString":"library SafeERC20Upgradeable"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3322:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:4","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3337:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":569,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3306:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3312:9:4","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":356,"src":"3306:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3306:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3283:62:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3367:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3383:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3367:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3359:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"3359:75:4"},{"expression":{"arguments":[{"id":586,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3468:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":589,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3498:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3504:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"3498:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3512:8:4","memberName":"selector","nodeType":"MemberAccess","src":"3498:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":592,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3522:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":593,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3531:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3546:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3531:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":587,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3475:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3479:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3475:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":585,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"3448:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3448:105:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"3448:105:4"}]}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"2967:180:4","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3161:21:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"token","nameLocation":"3201:5:4","nodeType":"VariableDeclaration","scope":601,"src":"3183:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"IERC20Upgradeable","nameLocations":["3183:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"3183:17:4"},"referencedDeclaration":379,"src":"3183:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"spender","nameLocation":"3216:7:4","nodeType":"VariableDeclaration","scope":601,"src":"3208:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"value","nameLocation":"3233:5:4","nodeType":"VariableDeclaration","scope":601,"src":"3225:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:57:4"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"3249:0:4"},"scope":791,"src":"3152:418:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"3977:333:4","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"approvalCall","nameLocation":"4000:12:4","nodeType":"VariableDeclaration","scope":647,"src":"3987:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"3987:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":622,"initialValue":{"arguments":[{"expression":{"expression":{"id":616,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4038:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4044:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"4038:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4052:8:4","memberName":"selector","nodeType":"MemberAccess","src":"4038:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":619,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"4062:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4071:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":614,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4015:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4019:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4015:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4015:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3987:90:4"},{"condition":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4092:45:4","subExpression":{"arguments":[{"id":624,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4117:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"id":625,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4124:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":623,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4093:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20Upgradeable,bytes memory) returns (bool)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":646,"nodeType":"IfStatement","src":"4088:216:4","trueBody":{"id":645,"nodeType":"Block","src":"4139:165:4","statements":[{"expression":{"arguments":[{"id":629,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4173:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":632,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4203:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4209:7:4","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":366,"src":"4203:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4217:8:4","memberName":"selector","nodeType":"MemberAccess","src":"4203:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":635,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"4227:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":630,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4180:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4184:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4180:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":628,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4153:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"4153:86:4"},{"expression":{"arguments":[{"id":641,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4273:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},{"id":642,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4280:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":640,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4253:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$379_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"ExpressionStatement","src":"4253:40:4"}]}}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"3576:308:4","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3898:12:4","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"token","nameLocation":"3929:5:4","nodeType":"VariableDeclaration","scope":648,"src":"3911:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":604,"nodeType":"UserDefinedTypeName","pathNode":{"id":603,"name":"IERC20Upgradeable","nameLocations":["3911:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"3911:17:4"},"referencedDeclaration":379,"src":"3911:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"3944:7:4","nodeType":"VariableDeclaration","scope":648,"src":"3936:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"3961:5:4","nodeType":"VariableDeclaration","scope":648,"src":"3953:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3910:57:4"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"3977:0:4"},"scope":791,"src":"3889:421:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":704,"nodeType":"Block","src":"4688:257:4","statements":[{"assignments":[670],"declarations":[{"constant":false,"id":670,"mutability":"mutable","name":"nonceBefore","nameLocation":"4706:11:4","nodeType":"VariableDeclaration","scope":704,"src":"4698:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":675,"initialValue":{"arguments":[{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4733:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4720:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$415","typeString":"contract IERC20PermitUpgradeable"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4726:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":408,"src":"4720:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4698:41:4"},{"expression":{"arguments":[{"id":679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4762:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"4769:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4778:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":682,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4785:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":683,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4795:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":684,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"4798:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":685,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4801:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":676,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4749:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$415","typeString":"contract IERC20PermitUpgradeable"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4755:6:4","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":400,"src":"4749:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"4749:54:4"},{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"nonceAfter","nameLocation":"4821:10:4","nodeType":"VariableDeclaration","scope":704,"src":"4813:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":694,"initialValue":{"arguments":[{"id":692,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4847:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":690,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4834:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$415","typeString":"contract IERC20PermitUpgradeable"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4840:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":408,"src":"4834:12:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4813:40:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":696,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4871:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"4885:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4899:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4885:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4871:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4902:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4863:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4863:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"4863:75:4"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"4316:141:4","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":705,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4471:10:4","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"token","nameLocation":"4515:5:4","nodeType":"VariableDeclaration","scope":705,"src":"4491:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$415","typeString":"contract IERC20PermitUpgradeable"},"typeName":{"id":651,"nodeType":"UserDefinedTypeName","pathNode":{"id":650,"name":"IERC20PermitUpgradeable","nameLocations":["4491:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":415,"src":"4491:23:4"},"referencedDeclaration":415,"src":"4491:23:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$415","typeString":"contract IERC20PermitUpgradeable"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"owner","nameLocation":"4538:5:4","nodeType":"VariableDeclaration","scope":705,"src":"4530:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"spender","nameLocation":"4561:7:4","nodeType":"VariableDeclaration","scope":705,"src":"4553:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"value","nameLocation":"4586:5:4","nodeType":"VariableDeclaration","scope":705,"src":"4578:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4578:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"deadline","nameLocation":"4609:8:4","nodeType":"VariableDeclaration","scope":705,"src":"4601:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"4601:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"v","nameLocation":"4633:1:4","nodeType":"VariableDeclaration","scope":705,"src":"4627:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":661,"name":"uint8","nodeType":"ElementaryTypeName","src":"4627:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"r","nameLocation":"4652:1:4","nodeType":"VariableDeclaration","scope":705,"src":"4644:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"s","nameLocation":"4671:1:4","nodeType":"VariableDeclaration","scope":705,"src":"4663:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4663:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4481:197:4"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"4688:0:4"},"scope":791,"src":"4462:483:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"5409:572:4","statements":[{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"returndata","nameLocation":"5771:10:4","nodeType":"VariableDeclaration","scope":741,"src":"5758:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":714,"name":"bytes","nodeType":"ElementaryTypeName","src":"5758:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":724,"initialValue":{"arguments":[{"id":721,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"5812:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5818:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":718,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"5792:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}],"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5784:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"5784:7:4","typeDescriptions":{}}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5799:12:4","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":881,"src":"5784:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5758:95:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":726,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"5871:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5882:6:4","memberName":"length","nodeType":"MemberAccess","src":"5871:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5892:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5871:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":732,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"5908:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5921:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":733,"name":"bool","nodeType":"ElementaryTypeName","src":"5921:4:4","typeDescriptions":{}}}],"id":735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5920:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":730,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5897:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5901:6:4","memberName":"decode","nodeType":"MemberAccess","src":"5897:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5897:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5871:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5929:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5863:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5863:111:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"5863:111:4"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"4951:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5337:19:4","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"token","nameLocation":"5375:5:4","nodeType":"VariableDeclaration","scope":742,"src":"5357:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"IERC20Upgradeable","nameLocations":["5357:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"5357:17:4"},"referencedDeclaration":379,"src":"5357:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"data","nameLocation":"5395:4:4","nodeType":"VariableDeclaration","scope":742,"src":"5382:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":710,"name":"bytes","nodeType":"ElementaryTypeName","src":"5382:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5356:44:4"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"5409:0:4"},"scope":791,"src":"5328:653:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":789,"nodeType":"Block","src":"6582:516:4","statements":[{"assignments":[754,756],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"success","nameLocation":"6883:7:4","nodeType":"VariableDeclaration","scope":789,"src":"6878:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":753,"name":"bool","nodeType":"ElementaryTypeName","src":"6878:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"returndata","nameLocation":"6905:10:4","nodeType":"VariableDeclaration","scope":789,"src":"6892:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":755,"name":"bytes","nodeType":"ElementaryTypeName","src":"6892:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":764,"initialValue":{"arguments":[{"id":762,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"6939:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":759,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6927:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}],"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6919:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"6919:7:4","typeDescriptions":{}}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6934:4:4","memberName":"call","nodeType":"MemberAccess","src":"6919:19:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6877:67:4"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":765,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"6973:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":766,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"6985:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6996:6:4","memberName":"length","nodeType":"MemberAccess","src":"6985:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":772,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7022:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7035:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"7035:4:4","typeDescriptions":{}}}],"id":775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7034:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":770,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7011:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7015:6:4","memberName":"decode","nodeType":"MemberAccess","src":"7011:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6985:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6984:58:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:69:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":784,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"7084:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7076:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"7076:7:4","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7076:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":780,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"7046:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1121_$","typeString":"type(library AddressUpgradeable)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7065:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":809,"src":"7046:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7046:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:118:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":752,"id":788,"nodeType":"Return","src":"6954:137:4"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"5987:490:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":790,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6491:23:4","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"token","nameLocation":"6533:5:4","nodeType":"VariableDeclaration","scope":790,"src":"6515:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"},"typeName":{"id":745,"nodeType":"UserDefinedTypeName","pathNode":{"id":744,"name":"IERC20Upgradeable","nameLocations":["6515:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"6515:17:4"},"referencedDeclaration":379,"src":"6515:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"data","nameLocation":"6553:4:4","nodeType":"VariableDeclaration","scope":790,"src":"6540:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":747,"name":"bytes","nodeType":"ElementaryTypeName","src":"6540:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6514:44:4"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"6576:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":750,"name":"bool","nodeType":"ElementaryTypeName","src":"6576:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6575:6:4"},"scope":791,"src":"6482:616:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":792,"src":"734:6366:4","usedErrors":[]}],"src":"115:6986:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1121]},"id":1122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":793,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1121,"linearizedBaseContracts":[1121],"name":"AddressUpgradeable","nameLocation":"202:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":808,"nodeType":"Block","src":"1489:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":802,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1713:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:5","memberName":"code","nodeType":"MemberAccess","src":"1713:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:5","memberName":"length","nodeType":"MemberAccess","src":"1713:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":801,"id":807,"nodeType":"Return","src":"1706:30:5"}]},"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"227:1191:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:5","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"account","nameLocation":"1451:7:5","nodeType":"VariableDeclaration","scope":809,"src":"1443:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:5"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"1483:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":799,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:5"},"scope":1121,"src":"1423:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"2729:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":820,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1121","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1121","typeString":"library AddressUpgradeable"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:5","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2772:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"2739:73:5"},{"assignments":[829,null],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"success","nameLocation":"2829:7:5","nodeType":"VariableDeclaration","scope":842,"src":"2824:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":828,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":836,"initialValue":{"arguments":[{"hexValue":"","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":830,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2842:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:5","memberName":"call","nodeType":"MemberAccess","src":"2842:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":832,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2864:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:5"},{"expression":{"arguments":[{"id":838,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"2893:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"2885:78:5"}]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"1749:904:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:5","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:5","nodeType":"VariableDeclaration","scope":843,"src":"2677:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"amount","nameLocation":"2712:6:5","nodeType":"VariableDeclaration","scope":843,"src":"2704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:5"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"2729:0:5"},"scope":1121,"src":"2658:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":860,"nodeType":"Block","src":"3801:96:5","statements":[{"expression":{"arguments":[{"id":854,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3840:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3848:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":853,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[901,945],"referencedDeclaration":945,"src":"3818:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":852,"id":859,"nodeType":"Return","src":"3811:79:5"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"2976:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":861,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:5","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"target","nameLocation":"3742:6:5","nodeType":"VariableDeclaration","scope":861,"src":"3734:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"data","nameLocation":"3763:4:5","nodeType":"VariableDeclaration","scope":861,"src":"3750:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":847,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:5"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":861,"src":"3787:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":850,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:5"},"scope":1121,"src":"3712:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":880,"nodeType":"Block","src":"4266:76:5","statements":[{"expression":{"arguments":[{"id":874,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"4305:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4313:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":877,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"4322:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":873,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[901,945],"referencedDeclaration":945,"src":"4283:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":872,"id":879,"nodeType":"Return","src":"4276:59:5"}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"3903:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":881,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:5","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"target","nameLocation":"4158:6:5","nodeType":"VariableDeclaration","scope":881,"src":"4150:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"data","nameLocation":"4187:4:5","nodeType":"VariableDeclaration","scope":881,"src":"4174:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":865,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:5","nodeType":"VariableDeclaration","scope":881,"src":"4201:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":867,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:5"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":881,"src":"4252:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:5"},"scope":1121,"src":"4119:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":900,"nodeType":"Block","src":"4817:111:5","statements":[{"expression":{"arguments":[{"id":894,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"4856:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4864:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4870:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":893,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[901,945],"referencedDeclaration":945,"src":"4834:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":892,"id":899,"nodeType":"Return","src":"4827:94:5"}]},"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"4348:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:5","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"target","nameLocation":"4743:6:5","nodeType":"VariableDeclaration","scope":901,"src":"4735:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"data","nameLocation":"4764:4:5","nodeType":"VariableDeclaration","scope":901,"src":"4751:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":885,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"value","nameLocation":"4778:5:5","nodeType":"VariableDeclaration","scope":901,"src":"4770:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:5"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"4803:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:5"},"scope":1121,"src":"4704:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"5355:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":918,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1121","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1121","typeString":"library AddressUpgradeable"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:5","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"5398:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":925,"nodeType":"ExpressionStatement","src":"5365:81:5"},{"assignments":[927,929],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"success","nameLocation":"5462:7:5","nodeType":"VariableDeclaration","scope":944,"src":"5457:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":926,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:5","nodeType":"VariableDeclaration","scope":944,"src":"5471:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":928,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":936,"initialValue":{"arguments":[{"id":934,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"5524:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":930,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"5498:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:5","memberName":"call","nodeType":"MemberAccess","src":"5498:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"5517:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:5"},{"expression":{"arguments":[{"id":938,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"5573:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5581:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":940,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"5590:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":941,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5602:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":937,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5546:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":914,"id":943,"nodeType":"Return","src":"5539:76:5"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"4934:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:5","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"target","nameLocation":"5224:6:5","nodeType":"VariableDeclaration","scope":945,"src":"5216:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"data","nameLocation":"5253:4:5","nodeType":"VariableDeclaration","scope":945,"src":"5240:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"value","nameLocation":"5275:5:5","nodeType":"VariableDeclaration","scope":945,"src":"5267:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:5","nodeType":"VariableDeclaration","scope":945,"src":"5290:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":909,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:5"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":945,"src":"5341:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:5"},"scope":1121,"src":"5176:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"5899:97:5","statements":[{"expression":{"arguments":[{"id":956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5935:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5943:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":955,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[962,991],"referencedDeclaration":991,"src":"5916:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"5909:80:5"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"5628:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:5","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"target","nameLocation":"5835:6:5","nodeType":"VariableDeclaration","scope":962,"src":"5827:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"data","nameLocation":"5856:4:5","nodeType":"VariableDeclaration","scope":962,"src":"5843:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:5"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"5885:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:5"},"scope":1121,"src":"5799:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"6338:168:5","statements":[{"assignments":[975,977],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"success","nameLocation":"6354:7:5","nodeType":"VariableDeclaration","scope":990,"src":"6349:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":974,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:5","nodeType":"VariableDeclaration","scope":990,"src":"6363:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":982,"initialValue":{"arguments":[{"id":980,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"6408:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":978,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6390:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:5"},{"expression":{"arguments":[{"id":984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"6457:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6465:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":986,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6474:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":987,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6486:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":983,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6430:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":973,"id":989,"nodeType":"Return","src":"6423:76:5"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"6002:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:5","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"target","nameLocation":"6225:6:5","nodeType":"VariableDeclaration","scope":991,"src":"6217:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"data","nameLocation":"6254:4:5","nodeType":"VariableDeclaration","scope":991,"src":"6241:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:5","nodeType":"VariableDeclaration","scope":991,"src":"6268:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":968,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:5"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"6324:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":971,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:5"},"scope":1121,"src":"6180:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1007,"nodeType":"Block","src":"6782:101:5","statements":[{"expression":{"arguments":[{"id":1002,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"6820:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"6828:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1001,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1008,1037],"referencedDeclaration":1037,"src":"6799:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1000,"id":1006,"nodeType":"Return","src":"6792:84:5"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"6512:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1008,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:5","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"target","nameLocation":"6723:6:5","nodeType":"VariableDeclaration","scope":1008,"src":"6715:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"data","nameLocation":"6744:4:5","nodeType":"VariableDeclaration","scope":1008,"src":"6731:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:5"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"6768:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":998,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:5"},"scope":1121,"src":"6685:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1036,"nodeType":"Block","src":"7224:170:5","statements":[{"assignments":[1021,1023],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"success","nameLocation":"7240:7:5","nodeType":"VariableDeclaration","scope":1036,"src":"7235:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:5","nodeType":"VariableDeclaration","scope":1036,"src":"7249:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1028,"initialValue":{"arguments":[{"id":1026,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"7296:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1024,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7276:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:5"},{"expression":{"arguments":[{"id":1030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7345:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1031,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7353:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1032,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"7362:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1033,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"7374:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1029,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7318:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1019,"id":1035,"nodeType":"Return","src":"7311:76:5"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"6889:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:5","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"target","nameLocation":"7116:6:5","nodeType":"VariableDeclaration","scope":1037,"src":"7108:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"data","nameLocation":"7145:4:5","nodeType":"VariableDeclaration","scope":1037,"src":"7132:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:5","nodeType":"VariableDeclaration","scope":1037,"src":"7159:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1014,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:5"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1037,"src":"7210:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:5"},"scope":1121,"src":"7069:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"7876:434:5","statements":[{"condition":{"id":1051,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7890:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1073,"nodeType":"Block","src":"8246:58:5","statements":[{"expression":{"arguments":[{"id":1069,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8268:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1070,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8280:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1068,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"8260:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"8260:33:5"}]},"id":1074,"nodeType":"IfStatement","src":"7886:418:5","trueBody":{"id":1067,"nodeType":"Block","src":"7899:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1052,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"7917:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:5","memberName":"length","nodeType":"MemberAccess","src":"7917:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1064,"nodeType":"IfStatement","src":"7913:286:5","trueBody":{"id":1063,"nodeType":"Block","src":"7941:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1058,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"8143:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1057,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8132:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"8124:60:5"}]}},{"expression":{"id":1065,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8219:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1050,"id":1066,"nodeType":"Return","src":"8212:17:5"}]}}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"7400:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"target","nameLocation":"7735:6:5","nodeType":"VariableDeclaration","scope":1076,"src":"7727:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"success","nameLocation":"7756:7:5","nodeType":"VariableDeclaration","scope":1076,"src":"7751:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1041,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:5","nodeType":"VariableDeclaration","scope":1076,"src":"7773:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:5","nodeType":"VariableDeclaration","scope":1076,"src":"7806:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1045,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"7862:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1048,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:5"},"scope":1121,"src":"7682:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1099,"nodeType":"Block","src":"8691:135:5","statements":[{"condition":{"id":1088,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"8705:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1097,"nodeType":"Block","src":"8762:58:5","statements":[{"expression":{"arguments":[{"id":1093,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8784:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1094,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"8796:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1092,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"8776:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1096,"nodeType":"ExpressionStatement","src":"8776:33:5"}]},"id":1098,"nodeType":"IfStatement","src":"8701:119:5","trueBody":{"id":1091,"nodeType":"Block","src":"8714:42:5","statements":[{"expression":{"id":1089,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"8735:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1087,"id":1090,"nodeType":"Return","src":"8728:17:5"}]}}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"8316:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:5","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"success","nameLocation":"8571:7:5","nodeType":"VariableDeclaration","scope":1100,"src":"8566:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1078,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:5","nodeType":"VariableDeclaration","scope":1100,"src":"8588:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1080,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:5","nodeType":"VariableDeclaration","scope":1100,"src":"8621:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1082,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:5"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"8677:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1085,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:5"},"scope":1121,"src":"8531:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"8915:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1107,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"8991:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:5","memberName":"length","nodeType":"MemberAccess","src":"8991:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1117,"nodeType":"Block","src":"9321:45:5","statements":[{"expression":{"arguments":[{"id":1114,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"9342:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1113,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"9335:20:5"}]},"id":1118,"nodeType":"IfStatement","src":"8987:379:5","trueBody":{"id":1112,"nodeType":"Block","src":"9014:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:5"},"nodeType":"YulFunctionCall","src":"9213:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:5"},"nodeType":"YulFunctionCall","src":"9254:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:5"},"nodeType":"YulFunctionCall","src":"9247:44:5"},"nodeType":"YulExpressionStatement","src":"9247:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1102,"isOffset":false,"isSlot":false,"src":"9219:10:5","valueSize":1},{"declaration":1102,"isOffset":false,"isSlot":false,"src":"9262:10:5","valueSize":1}],"id":1111,"nodeType":"InlineAssembly","src":"9163:142:5"}]}}]},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:5","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:5","nodeType":"VariableDeclaration","scope":1120,"src":"8849:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1101,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:5","nodeType":"VariableDeclaration","scope":1120,"src":"8874:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1103,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:5"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"8915:0:5"},"scope":1121,"src":"8832:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1122,"src":"194:9180:5","usedErrors":[]}],"src":"101:9274:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1172],"Initializable":[301]},"id":1173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1123,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1173,"sourceUnit":302,"src":"125:63:6","symbolAliases":[{"foreign":{"id":1124,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"133:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1127,"name":"Initializable","nameLocations":["727:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"727:13:6"},"id":1128,"nodeType":"InheritanceSpecifier","src":"727:13:6"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"190:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1172,"linearizedBaseContracts":[1172,301],"name":"ContextUpgradeable","nameLocation":"705:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1133,"nodeType":"Block","src":"799:7:6","statements":[]},"id":1134,"implemented":true,"kind":"function","modifiers":[{"id":1131,"kind":"modifierInvocation","modifierName":{"id":1130,"name":"onlyInitializing","nameLocations":["782:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"782:16:6"},"nodeType":"ModifierInvocation","src":"782:16:6"}],"name":"__Context_init","nameLocation":"756:14:6","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"770:2:6"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"799:0:6"},"scope":1172,"src":"747:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"874:7:6","statements":[]},"id":1140,"implemented":true,"kind":"function","modifiers":[{"id":1137,"kind":"modifierInvocation","modifierName":{"id":1136,"name":"onlyInitializing","nameLocations":["857:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"857:16:6"},"nodeType":"ModifierInvocation","src":"857:16:6"}],"name":"__Context_init_unchained","nameLocation":"821:24:6","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"845:2:6"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"874:0:6"},"scope":1172,"src":"812:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1148,"nodeType":"Block","src":"948:34:6","statements":[{"expression":{"expression":{"id":1145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:6","memberName":"sender","nodeType":"MemberAccess","src":"965:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1144,"id":1147,"nodeType":"Return","src":"958:17:6"}]},"id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:6","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"905:2:6"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"939:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:6"},"scope":1172,"src":"886:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"1055:32:6","statements":[{"expression":{"expression":{"id":1154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:6","memberName":"data","nodeType":"MemberAccess","src":"1072:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1153,"id":1156,"nodeType":"Return","src":"1065:15:6"}]},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:6","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"1005:2:6"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"1039:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:6"},"scope":1172,"src":"988:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1165,"nodeType":"Block","src":"1165:25:6","statements":[{"expression":{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1162,"id":1164,"nodeType":"Return","src":"1175:8:6"}]},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:6","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"1122:2:6"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1166,"src":"1156:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:6"},"scope":1172,"src":"1093:97:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"1196:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1171,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:6","nodeType":"VariableDeclaration","scope":1172,"src":"1455:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1170,"length":{"hexValue":"3530","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1173,"src":"687:796:6","usedErrors":[]}],"src":"101:1383:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2633],"SignedMath":[2738],"Strings":[1401]},"id":1402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1174,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1402,"sourceUnit":2634,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1402,"sourceUnit":2739,"src":"152:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"185:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1401,"linearizedBaseContracts":[1401],"name":"Strings","nameLocation":"228:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1180,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:7","nodeType":"VariableDeclaration","scope":1401,"src":"242:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1178,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1183,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:7","nodeType":"VariableDeclaration","scope":1401,"src":"302:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1181,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1230,"nodeType":"Block","src":"518:625:7","statements":[{"id":1229,"nodeType":"UncheckedBlock","src":"528:609:7","statements":[{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"length","nameLocation":"560:6:7","nodeType":"VariableDeclaration","scope":1229,"src":"552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"580:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1193,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2633_$","typeString":"type(library Math)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"569:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:7"},{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"buffer","nameLocation":"618:6:7","nodeType":"VariableDeclaration","scope":1229,"src":"604:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1206,"initialValue":{"arguments":[{"id":1204,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"638:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1202,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:7"},{"assignments":[1208],"declarations":[{"constant":false,"id":1208,"mutability":"mutable","name":"ptr","nameLocation":"667:3:7","nodeType":"VariableDeclaration","scope":1229,"src":"659:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1209,"nodeType":"VariableDeclarationStatement","src":"659:11:7"},{"AST":{"nodeType":"YulBlock","src":"740:67:7","statements":[{"nodeType":"YulAssignment","src":"758:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:7"},"nodeType":"YulFunctionCall","src":"777:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:7"},"nodeType":"YulFunctionCall","src":"765:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1201,"isOffset":false,"isSlot":false,"src":"769:6:7","valueSize":1},{"declaration":1192,"isOffset":false,"isSlot":false,"src":"785:6:7","valueSize":1},{"declaration":1208,"isOffset":false,"isSlot":false,"src":"758:3:7","valueSize":1}],"id":1210,"nodeType":"InlineAssembly","src":"731:76:7"},{"body":{"id":1225,"nodeType":"Block","src":"833:267:7","statements":[{"expression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:7","subExpression":{"id":1212,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1214,"nodeType":"ExpressionStatement","src":"851:5:7"},{"AST":{"nodeType":"YulBlock","src":"934:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:7"},"nodeType":"YulFunctionCall","src":"974:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:7"},"nodeType":"YulFunctionCall","src":"969:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:7"},"nodeType":"YulFunctionCall","src":"956:44:7"},"nodeType":"YulExpressionStatement","src":"956:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1180,"isOffset":false,"isSlot":false,"src":"990:8:7","valueSize":1},{"declaration":1208,"isOffset":false,"isSlot":false,"src":"964:3:7","valueSize":1},{"declaration":1186,"isOffset":false,"isSlot":false,"src":"978:5:7","valueSize":1}],"id":1215,"nodeType":"InlineAssembly","src":"925:93:7"},{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"1035:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"1064:21:7","trueBody":{"id":1223,"nodeType":"Break","src":"1080:5:7"}}]},"condition":{"hexValue":"74727565","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1226,"nodeType":"WhileStatement","src":"820:280:7"},{"expression":{"id":1227,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1190,"id":1228,"nodeType":"Return","src":"1113:13:7"}]}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"352:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:7","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"value","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":1231,"src":"465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:7"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1231,"src":"503:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1188,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:7"},"scope":1401,"src":"447:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"1313:103:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1354:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:7","trueExpression":{"hexValue":"2d","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1250,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"1385:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2738_$","typeString":"type(library SignedMath)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"1385:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1231,1259],"referencedDeclaration":1231,"src":"1376:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1241,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1239,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1238,"id":1257,"nodeType":"Return","src":"1323:86:7"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"1149:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:7","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"value","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":1259,"src":"1261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1233,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:7"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"1298:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1236,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:7"},"scope":1401,"src":"1243:173:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1278,"nodeType":"Block","src":"1595:100:7","statements":[{"id":1277,"nodeType":"UncheckedBlock","src":"1605:84:7","statements":[{"expression":{"arguments":[{"id":1268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1269,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1655:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2633_$","typeString":"type(library Math)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2593,"src":"1655:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1267,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1279,1355,1375],"referencedDeclaration":1355,"src":"1636:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1266,"id":1276,"nodeType":"Return","src":"1629:49:7"}]}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1422:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:7","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"value","nameLocation":"1550:5:7","nodeType":"VariableDeclaration","scope":1279,"src":"1542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:7"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"1580:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1264,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:7"},"scope":1401,"src":"1521:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"1908:347:7","statements":[{"assignments":[1290],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:7","nodeType":"VariableDeclaration","scope":1354,"src":"1918:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1289,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1294,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:7"},{"expression":{"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1300,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"1975:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1302,"indexExpression":{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1305,"nodeType":"ExpressionStatement","src":"1975:15:7"},{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1306,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1308,"indexExpression":{"hexValue":"31","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1311,"nodeType":"ExpressionStatement","src":"2000:15:7"},{"body":{"id":1340,"nodeType":"Block","src":"2070:83:7","statements":[{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1326,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1328,"indexExpression":{"id":1327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1329,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"2096:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1333,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1335,"nodeType":"ExpressionStatement","src":"2084:33:7"},{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"2131:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"initializationExpression":{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"i","nameLocation":"2038:1:7","nodeType":"VariableDeclaration","scope":1341,"src":"2030:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1319,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1315,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:7"},"loopExpression":{"expression":{"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:7","subExpression":{"id":1323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ExpressionStatement","src":"2065:3:7"},"nodeType":"ForStatement","src":"2025:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1348,"nodeType":"ExpressionStatement","src":"2162:55:7"},{"expression":{"arguments":[{"id":1351,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"2241:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1349,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:7","typeDescriptions":{}}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1288,"id":1353,"nodeType":"Return","src":"2227:21:7"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"1701:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"value","nameLocation":"1847:5:7","nodeType":"VariableDeclaration","scope":1355,"src":"1839:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"length","nameLocation":"1862:6:7","nodeType":"VariableDeclaration","scope":1355,"src":"1854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1355,"src":"1893:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:7"},"scope":1401,"src":"1818:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"2480:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1368,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2525:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1366,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:7","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{}}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1371,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"2533:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1363,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1279,1355,1375],"referencedDeclaration":1355,"src":"2497:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1362,"id":1373,"nodeType":"Return","src":"2490:59:7"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"2261:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:7","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"addr","nameLocation":"2436:4:7","nodeType":"VariableDeclaration","scope":1375,"src":"2428:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:7"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"2465:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1360,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:7"},"scope":1401,"src":"2407:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"2711:66:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2744:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:7","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1385,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"2767:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1392,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:7","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1384,"id":1398,"nodeType":"Return","src":"2721:49:7"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"2562:66:7","text":" @dev Returns true if the two strings are equal."},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:7","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"a","nameLocation":"2662:1:7","nodeType":"VariableDeclaration","scope":1400,"src":"2648:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1377,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"b","nameLocation":"2679:1:7","nodeType":"VariableDeclaration","scope":1400,"src":"2665:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1379,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:7"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1400,"src":"2705:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1382,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:7"},"scope":1401,"src":"2633:144:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1402,"src":"220:2559:7","usedErrors":[]}],"src":"101:2679:7"},"id":7},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1767],"Math":[2633],"SignedMath":[2738],"Strings":[1401]},"id":1768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1403,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1768,"sourceUnit":1402,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"163:205:8","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1767,"linearizedBaseContracts":[1767],"name":"ECDSA","nameLocation":"377:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1411,"members":[{"id":1406,"name":"NoError","nameLocation":"417:7:8","nodeType":"EnumValue","src":"417:7:8"},{"id":1407,"name":"InvalidSignature","nameLocation":"434:16:8","nodeType":"EnumValue","src":"434:16:8"},{"id":1408,"name":"InvalidSignatureLength","nameLocation":"460:22:8","nodeType":"EnumValue","src":"460:22:8"},{"id":1409,"name":"InvalidSignatureS","nameLocation":"492:17:8","nodeType":"EnumValue","src":"492:17:8"},{"id":1410,"name":"InvalidSignatureV","nameLocation":"519:17:8","nodeType":"EnumValue","src":"519:17:8"}],"name":"RecoverError","nameLocation":"394:12:8","nodeType":"EnumDefinition","src":"389:175:8"},{"body":{"id":1454,"nodeType":"Block","src":"624:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"638:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1418,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"647:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"647:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"734:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1424,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"743:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"743:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"843:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1433,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"852:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1408,"src":"852:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"965:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1442,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"974:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"974:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1450,"nodeType":"IfStatement","src":"961:114:8","trueBody":{"id":1449,"nodeType":"Block","src":"1006:69:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1445,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"1020:44:8"}]}},"id":1451,"nodeType":"IfStatement","src":"839:236:8","trueBody":{"id":1440,"nodeType":"Block","src":"889:66:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1436,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"903:41:8"}]}},"id":1452,"nodeType":"IfStatement","src":"730:345:8","trueBody":{"id":1431,"nodeType":"Block","src":"774:59:8","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1427,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"788:34:8"}]}},"id":1453,"nodeType":"IfStatement","src":"634:441:8","trueBody":{"id":1422,"nodeType":"Block","src":"669:55:8","statements":[{"functionReturnParameters":1416,"id":1421,"nodeType":"Return","src":"683:7:8"}]}}]},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:8","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"error","nameLocation":"604:5:8","nodeType":"VariableDeclaration","scope":1455,"src":"591:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1413,"nodeType":"UserDefinedTypeName","pathNode":{"id":1412,"name":"RecoverError","nameLocations":["591:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"591:12:8"},"referencedDeclaration":1411,"src":"591:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:8"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"624:0:8"},"scope":1767,"src":"570:511:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1500,"nodeType":"Block","src":"2249:626:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2263:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:8","memberName":"length","nodeType":"MemberAccess","src":"2263:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1498,"nodeType":"Block","src":"2788:81:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:8","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1494,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2822:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:8","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1408,"src":"2822:35:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"id":1496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1467,"id":1497,"nodeType":"Return","src":"2802:56:8"}]},"id":1499,"nodeType":"IfStatement","src":"2259:610:8","trueBody":{"id":1489,"nodeType":"Block","src":"2287:495:8","statements":[{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"r","nameLocation":"2309:1:8","nodeType":"VariableDeclaration","scope":1489,"src":"2301:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1474,"nodeType":"VariableDeclarationStatement","src":"2301:9:8"},{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"s","nameLocation":"2332:1:8","nodeType":"VariableDeclaration","scope":1489,"src":"2324:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1477,"nodeType":"VariableDeclarationStatement","src":"2324:9:8"},{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"v","nameLocation":"2353:1:8","nodeType":"VariableDeclaration","scope":1489,"src":"2347:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1478,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1480,"nodeType":"VariableDeclarationStatement","src":"2347:7:8"},{"AST":{"nodeType":"YulBlock","src":"2555:171:8","statements":[{"nodeType":"YulAssignment","src":"2573:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:8"},"nodeType":"YulFunctionCall","src":"2584:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:8"},"nodeType":"YulFunctionCall","src":"2578:27:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:8"}]},{"nodeType":"YulAssignment","src":"2622:32:8","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:8"},"nodeType":"YulFunctionCall","src":"2633:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:8"},"nodeType":"YulFunctionCall","src":"2627:27:8"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:8"}]},{"nodeType":"YulAssignment","src":"2671:41:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:8","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:8"},"nodeType":"YulFunctionCall","src":"2690:20:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:8"},"nodeType":"YulFunctionCall","src":"2684:27:8"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:8"},"nodeType":"YulFunctionCall","src":"2676:36:8"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1473,"isOffset":false,"isSlot":false,"src":"2573:1:8","valueSize":1},{"declaration":1476,"isOffset":false,"isSlot":false,"src":"2622:1:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"2588:9:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"2637:9:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"2694:9:8","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"2671:1:8","valueSize":1}],"id":1481,"nodeType":"InlineAssembly","src":"2546:180:8"},{"expression":{"arguments":[{"id":1483,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"2757:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2763:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"2766:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1486,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2769:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1482,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1501,1575,1669],"referencedDeclaration":1669,"src":"2746:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1467,"id":1488,"nodeType":"Return","src":"2739:32:8"}]}}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"1087:1053:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:8","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"hash","nameLocation":"2173:4:8","nodeType":"VariableDeclaration","scope":1501,"src":"2165:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"signature","nameLocation":"2192:9:8","nodeType":"VariableDeclaration","scope":1501,"src":"2179:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1459,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:8"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"2226:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"2235:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1465,"nodeType":"UserDefinedTypeName","pathNode":{"id":1464,"name":"RecoverError","nameLocations":["2235:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"2235:12:8"},"referencedDeclaration":1411,"src":"2235:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:8"},"scope":1767,"src":"2145:730:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"3748:140:8","statements":[{"assignments":[1512,1515],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:8","nodeType":"VariableDeclaration","scope":1527,"src":"3759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"error","nameLocation":"3791:5:8","nodeType":"VariableDeclaration","scope":1527,"src":"3778:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1514,"nodeType":"UserDefinedTypeName","pathNode":{"id":1513,"name":"RecoverError","nameLocations":["3778:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"3778:12:8"},"referencedDeclaration":1411,"src":"3778:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1520,"initialValue":{"arguments":[{"id":1517,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"3811:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1518,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"3817:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1516,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1501,1575,1669],"referencedDeclaration":1501,"src":"3800:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:8"},{"expression":{"arguments":[{"id":1522,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"3849:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}],"id":1521,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"3837:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1411_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"ExpressionStatement","src":"3837:18:8"},{"expression":{"id":1525,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"3872:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1510,"id":1526,"nodeType":"Return","src":"3865:16:8"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"2881:775:8","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:8","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"hash","nameLocation":"3686:4:8","nodeType":"VariableDeclaration","scope":1528,"src":"3678:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"signature","nameLocation":"3705:9:8","nodeType":"VariableDeclaration","scope":1528,"src":"3692:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:8"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1528,"src":"3739:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:8"},"scope":1767,"src":"3661:227:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"4245:203:8","statements":[{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"s","nameLocation":"4263:1:8","nodeType":"VariableDeclaration","scope":1574,"src":"4255:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1551,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1545,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"4267:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:8","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:8"},{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"v","nameLocation":"4363:1:8","nodeType":"VariableDeclaration","scope":1574,"src":"4357:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1552,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1558,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"4382:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:8","typeDescriptions":{}}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:8","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1554,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:8","typeDescriptions":{}}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:8"},{"expression":{"arguments":[{"id":1568,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4427:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1569,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4433:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1570,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4436:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1571,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4439:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1567,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1501,1575,1669],"referencedDeclaration":1669,"src":"4416:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1542,"id":1573,"nodeType":"Return","src":"4409:32:8"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"3894:243:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:8","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"hash","nameLocation":"4170:4:8","nodeType":"VariableDeclaration","scope":1575,"src":"4162:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"r","nameLocation":"4184:1:8","nodeType":"VariableDeclaration","scope":1575,"src":"4176:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"vs","nameLocation":"4195:2:8","nodeType":"VariableDeclaration","scope":1575,"src":"4187:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:8"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"4222:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"4231:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"RecoverError","nameLocations":["4231:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"4231:12:8"},"referencedDeclaration":1411,"src":"4231:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:8"},"scope":1767,"src":"4142:306:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"4699:136:8","statements":[{"assignments":[1588,1591],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:8","nodeType":"VariableDeclaration","scope":1604,"src":"4710:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"error","nameLocation":"4742:5:8","nodeType":"VariableDeclaration","scope":1604,"src":"4729:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"RecoverError","nameLocations":["4729:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"4729:12:8"},"referencedDeclaration":1411,"src":"4729:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1597,"initialValue":{"arguments":[{"id":1593,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"4762:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1594,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"4768:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1595,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4771:2:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1592,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1501,1575,1669],"referencedDeclaration":1575,"src":"4751:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:8"},{"expression":{"arguments":[{"id":1599,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"4796:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}],"id":1598,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"4784:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1411_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"ExpressionStatement","src":"4784:18:8"},{"expression":{"id":1602,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"4819:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1586,"id":1603,"nodeType":"Return","src":"4812:16:8"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"4454:154:8","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:8","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"hash","nameLocation":"4638:4:8","nodeType":"VariableDeclaration","scope":1605,"src":"4630:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"r","nameLocation":"4652:1:8","nodeType":"VariableDeclaration","scope":1605,"src":"4644:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"vs","nameLocation":"4663:2:8","nodeType":"VariableDeclaration","scope":1605,"src":"4655:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:8"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"4690:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:8"},"scope":1767,"src":"4613:222:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"5120:1345:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1624,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"6016:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:8","typeDescriptions":{}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1637,"nodeType":"IfStatement","src":"6004:161:8","trueBody":{"id":1636,"nodeType":"Block","src":"6089:76:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:8","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1632,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6123:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:8","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"6123:30:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"id":1634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1621,"id":1635,"nodeType":"Return","src":"6103:51:8"}]}},{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"signer","nameLocation":"6267:6:8","nodeType":"VariableDeclaration","scope":1668,"src":"6259:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1646,"initialValue":{"arguments":[{"id":1641,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6286:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1642,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"6292:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1643,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"6295:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1644,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"6298:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1640,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6314:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:8","typeDescriptions":{}}},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1662,"nodeType":"IfStatement","src":"6310:101:8","trueBody":{"id":1661,"nodeType":"Block","src":"6336:75:8","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:8","typeDescriptions":{}}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1657,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6370:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:8","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"6370:29:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"id":1659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1621,"id":1660,"nodeType":"Return","src":"6350:50:8"}]}},{"expression":{"components":[{"id":1663,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6429:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1664,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6437:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1411_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:8","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"6437:20:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"id":1666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1621,"id":1667,"nodeType":"Return","src":"6421:37:8"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"4841:163:8","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:8","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"hash","nameLocation":"5037:4:8","nodeType":"VariableDeclaration","scope":1669,"src":"5029:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"v","nameLocation":"5049:1:8","nodeType":"VariableDeclaration","scope":1669,"src":"5043:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1609,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"r","nameLocation":"5060:1:8","nodeType":"VariableDeclaration","scope":1669,"src":"5052:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"s","nameLocation":"5071:1:8","nodeType":"VariableDeclaration","scope":1669,"src":"5063:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:8"},"returnParameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"5097:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1619,"nodeType":"UserDefinedTypeName","pathNode":{"id":1618,"name":"RecoverError","nameLocations":["5106:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"5106:12:8"},"referencedDeclaration":1411,"src":"5106:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:8"},"scope":1767,"src":"5009:1456:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1701,"nodeType":"Block","src":"6692:138:8","statements":[{"assignments":[1684,1687],"declarations":[{"constant":false,"id":1684,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:8","nodeType":"VariableDeclaration","scope":1701,"src":"6703:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"error","nameLocation":"6735:5:8","nodeType":"VariableDeclaration","scope":1701,"src":"6722:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1686,"nodeType":"UserDefinedTypeName","pathNode":{"id":1685,"name":"RecoverError","nameLocations":["6722:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1411,"src":"6722:12:8"},"referencedDeclaration":1411,"src":"6722:12:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1694,"initialValue":{"arguments":[{"id":1689,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6755:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1690,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6761:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1691,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6764:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1692,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"6767:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1688,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1501,1575,1669],"referencedDeclaration":1669,"src":"6744:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1411_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:8"},{"expression":{"arguments":[{"id":1696,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6791:5:8","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1411","typeString":"enum ECDSA.RecoverError"}],"id":1695,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6779:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1411_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"6779:18:8"},{"expression":{"id":1699,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6814:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1682,"id":1700,"nodeType":"Return","src":"6807:16:8"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"6471:122:8","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1702,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:8","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"hash","nameLocation":"6623:4:8","nodeType":"VariableDeclaration","scope":1702,"src":"6615:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"v","nameLocation":"6635:1:8","nodeType":"VariableDeclaration","scope":1702,"src":"6629:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1673,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"r","nameLocation":"6646:1:8","nodeType":"VariableDeclaration","scope":1702,"src":"6638:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"s","nameLocation":"6657:1:8","nodeType":"VariableDeclaration","scope":1702,"src":"6649:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:8"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1702,"src":"6683:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:8"},"scope":1767,"src":"6598:232:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1711,"nodeType":"Block","src":"7206:310:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:8","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:8","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:8"},"nodeType":"YulFunctionCall","src":"7376:48:8"},"nodeType":"YulExpressionStatement","src":"7376:48:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:8","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:8"},"nodeType":"YulFunctionCall","src":"7437:18:8"},"nodeType":"YulExpressionStatement","src":"7437:18:8"},{"nodeType":"YulAssignment","src":"7468:32:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:8","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:8"},"nodeType":"YulFunctionCall","src":"7479:21:8"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1705,"isOffset":false,"isSlot":false,"src":"7450:4:8","valueSize":1},{"declaration":1708,"isOffset":false,"isSlot":false,"src":"7468:7:8","valueSize":1}],"id":1710,"nodeType":"InlineAssembly","src":"7353:157:8"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"6836:279:8","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:8","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"hash","nameLocation":"7160:4:8","nodeType":"VariableDeclaration","scope":1712,"src":"7152:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:8"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"message","nameLocation":"7197:7:8","nodeType":"VariableDeclaration","scope":1712,"src":"7189:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:8"},"scope":1767,"src":"7120:396:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1733,"nodeType":"Block","src":"7881:116:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":1726,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"7976:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:8","memberName":"length","nodeType":"MemberAccess","src":"7976:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1724,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"7959:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1401_$","typeString":"type(library Strings)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1231,"src":"7959:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1729,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"7987:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1721,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1720,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1719,"id":1732,"nodeType":"Return","src":"7891:99:8"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"7522:274:8","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:8","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"s","nameLocation":"7846:1:8","nodeType":"VariableDeclaration","scope":1734,"src":"7833:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1714,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:8"},"returnParameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"7872:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:8"},"scope":1767,"src":"7801:196:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"8443:290:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:8"},"nodeType":"YulFunctionCall","src":"8530:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:8"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:8","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:8"},"nodeType":"YulFunctionCall","src":"8554:23:8"},"nodeType":"YulExpressionStatement","src":"8554:23:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:8","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:8"},"nodeType":"YulFunctionCall","src":"8597:14:8"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:8"},"nodeType":"YulFunctionCall","src":"8590:39:8"},"nodeType":"YulExpressionStatement","src":"8590:39:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:8","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:8"},"nodeType":"YulFunctionCall","src":"8649:14:8"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:8"},"nodeType":"YulFunctionCall","src":"8642:34:8"},"nodeType":"YulExpressionStatement","src":"8642:34:8"},{"nodeType":"YulAssignment","src":"8689:28:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:8","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:8"},"nodeType":"YulFunctionCall","src":"8697:20:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1742,"isOffset":false,"isSlot":false,"src":"8689:4:8","valueSize":1},{"declaration":1737,"isOffset":false,"isSlot":false,"src":"8613:15:8","valueSize":1},{"declaration":1739,"isOffset":false,"isSlot":false,"src":"8665:10:8","valueSize":1}],"id":1744,"nodeType":"InlineAssembly","src":"8496:231:8"}]},"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"8003:328:8","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:8","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:8","nodeType":"VariableDeclaration","scope":1746,"src":"8361:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:8","nodeType":"VariableDeclaration","scope":1746,"src":"8386:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:8"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"data","nameLocation":"8437:4:8","nodeType":"VariableDeclaration","scope":1746,"src":"8429:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:8"},"scope":1767,"src":"8336:397:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"9048:80:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1760,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"9104:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1761,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"9115:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1757,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1756,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1755,"id":1764,"nodeType":"Return","src":"9058:63:8"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"8739:193:8","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:8","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"validator","nameLocation":"8986:9:8","nodeType":"VariableDeclaration","scope":1766,"src":"8978:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"data","nameLocation":"9010:4:8","nodeType":"VariableDeclaration","scope":1766,"src":"8997:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1750,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:8"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"9039:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:8"},"scope":1767,"src":"8937:191:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1768,"src":"369:8761:8","usedErrors":[]}],"src":"112:9019:8"},"id":8},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2633]},"id":2634,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1769,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2633,"linearizedBaseContracts":[2633],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1774,"members":[{"id":1771,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":1772,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":1773,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":1791,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":1787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1783,"id":1790,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":1792,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":1792,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1792,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":2633,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1809,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1803,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":1805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1801,"id":1808,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":1810,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":1810,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":2633,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1819,"id":1831,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":1833,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":1833,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1833,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":2633,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1842,"id":1856,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":1858,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":1858,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":2633,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"1765:4115:9","statements":[{"id":1979,"nodeType":"UncheckedBlock","src":"1775:4099:9","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:9","nodeType":"VariableDeclaration","scope":1979,"src":"2096:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1872,"nodeType":"VariableDeclarationStatement","src":"2096:13:9"},{"assignments":[1874],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:9","nodeType":"VariableDeclaration","scope":1979,"src":"2168:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1875,"nodeType":"VariableDeclarationStatement","src":"2168:13:9"},{"AST":{"nodeType":"YulBlock","src":"2248:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:9"},"nodeType":"YulFunctionCall","src":"2289:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:9"},"nodeType":"YulFunctionCall","src":"2276:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:9"},"nodeType":"YulFunctionCall","src":"2322:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:9"}]},{"nodeType":"YulAssignment","src":"2348:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:9"},"nodeType":"YulFunctionCall","src":"2361:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:9"},"nodeType":"YulFunctionCall","src":"2377:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:9"},"nodeType":"YulFunctionCall","src":"2357:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1871,"isOffset":false,"isSlot":false,"src":"2313:5:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"2369:5:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"2384:5:9","valueSize":1},{"declaration":1874,"isOffset":false,"isSlot":false,"src":"2348:5:9","valueSize":1},{"declaration":1861,"isOffset":false,"isSlot":false,"src":"2283:1:9","valueSize":1},{"declaration":1861,"isOffset":false,"isSlot":false,"src":"2326:1:9","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"2286:1:9","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"2329:1:9","valueSize":1}],"id":1876,"nodeType":"InlineAssembly","src":"2239:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1885,"nodeType":"IfStatement","src":"2482:368:9","trueBody":{"id":1884,"nodeType":"Block","src":"2498:352:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"2816:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1881,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2824:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1869,"id":1883,"nodeType":"Return","src":"2809:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2960:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1888,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"2952:53:9"},{"assignments":[1894],"declarations":[{"constant":false,"id":1894,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:9","nodeType":"VariableDeclaration","scope":1979,"src":"3261:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1895,"nodeType":"VariableDeclarationStatement","src":"3261:17:9"},{"AST":{"nodeType":"YulBlock","src":"3301:291:9","statements":[{"nodeType":"YulAssignment","src":"3370:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:9"},"nodeType":"YulFunctionCall","src":"3383:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:9"}]},{"nodeType":"YulAssignment","src":"3490:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:9"},"nodeType":"YulFunctionCall","src":"3510:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:9"}]},{"nodeType":"YulAssignment","src":"3548:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:9"},"nodeType":"YulFunctionCall","src":"3557:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1865,"isOffset":false,"isSlot":false,"src":"3396:11:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"3524:5:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"3548:5:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"3561:5:9","valueSize":1},{"declaration":1874,"isOffset":false,"isSlot":false,"src":"3490:5:9","valueSize":1},{"declaration":1874,"isOffset":false,"isSlot":false,"src":"3503:5:9","valueSize":1},{"declaration":1894,"isOffset":false,"isSlot":false,"src":"3370:9:9","valueSize":1},{"declaration":1894,"isOffset":false,"isSlot":false,"src":"3513:9:9","valueSize":1},{"declaration":1894,"isOffset":false,"isSlot":false,"src":"3568:9:9","valueSize":1},{"declaration":1861,"isOffset":false,"isSlot":false,"src":"3390:1:9","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"3393:1:9","valueSize":1}],"id":1896,"nodeType":"InlineAssembly","src":"3292:300:9"},{"assignments":[1898],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"twos","nameLocation":"3907:4:9","nodeType":"VariableDeclaration","scope":1979,"src":"3899:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1906,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3914:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:9","subExpression":{"id":1900,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3930:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:9"},{"AST":{"nodeType":"YulBlock","src":"3969:362:9","statements":[{"nodeType":"YulAssignment","src":"4034:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:9"},"nodeType":"YulFunctionCall","src":"4049:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:9"}]},{"nodeType":"YulAssignment","src":"4138:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:9"},"nodeType":"YulFunctionCall","src":"4147:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:9"}]},{"nodeType":"YulAssignment","src":"4278:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:9"},"nodeType":"YulFunctionCall","src":"4294:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:9"},"nodeType":"YulFunctionCall","src":"4290:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:9"},"nodeType":"YulFunctionCall","src":"4286:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1865,"isOffset":false,"isSlot":false,"src":"4034:11:9","valueSize":1},{"declaration":1865,"isOffset":false,"isSlot":false,"src":"4053:11:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"4138:5:9","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"4151:5:9","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":false,"src":"4066:4:9","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":false,"src":"4158:4:9","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":false,"src":"4278:4:9","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":false,"src":"4301:4:9","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":false,"src":"4308:4:9","valueSize":1}],"id":1907,"nodeType":"InlineAssembly","src":"3960:371:9"},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1908,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1909,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1910,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"4414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1913,"nodeType":"ExpressionStatement","src":"4397:21:9"},{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1979,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1922,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1917,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4759:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:9"},{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1923,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1926,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"4992:36:9"},{"expression":{"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1931,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5076:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1934,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5090:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1938,"nodeType":"ExpressionStatement","src":"5061:36:9"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1939,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5146:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1942,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"5131:36:9"},{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5216:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1950,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"5201:36:9"},{"expression":{"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1955,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5286:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1958,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1962,"nodeType":"ExpressionStatement","src":"5271:36:9"},{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1963,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"5357:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1966,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"5342:36:9"},{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5821:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"5812:24:9"},{"expression":{"id":1977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"5857:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1869,"id":1978,"nodeType":"Return","src":"5850:13:9"}]}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"x","nameLocation":"1691:1:9","nodeType":"VariableDeclaration","scope":1981,"src":"1683:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"y","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1981,"src":"1694:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:9","nodeType":"VariableDeclaration","scope":1981,"src":"1705:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:9"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"result","nameLocation":"1757:6:9","nodeType":"VariableDeclaration","scope":1981,"src":"1749:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:9"},"scope":2633,"src":"1667:4213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2024,"nodeType":"Block","src":"6122:189:9","statements":[{"assignments":[1997],"declarations":[{"constant":false,"id":1997,"mutability":"mutable","name":"result","nameLocation":"6140:6:9","nodeType":"VariableDeclaration","scope":2024,"src":"6132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2003,"initialValue":{"arguments":[{"id":1999,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6156:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2000,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6159:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2001,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6162:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1998,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1981,2025],"referencedDeclaration":1981,"src":"6149:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2004,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6188:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2005,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6200:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1774_$","typeString":"type(enum Math.Rounding)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"6200:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"src":"6188:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6222:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2010,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2011,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6228:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2008,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"6184:98:9","trueBody":{"id":2020,"nodeType":"Block","src":"6246:36:9","statements":[{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"6260:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"6260:11:9"}]}},{"expression":{"id":2022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"6298:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1995,"id":2023,"nodeType":"Return","src":"6291:13:9"}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"5886:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2025,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:9","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"x","nameLocation":"6036:1:9","nodeType":"VariableDeclaration","scope":2025,"src":"6028:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"y","nameLocation":"6047:1:9","nodeType":"VariableDeclaration","scope":2025,"src":"6039:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:9","nodeType":"VariableDeclaration","scope":2025,"src":"6050:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:9","nodeType":"VariableDeclaration","scope":2025,"src":"6071:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"typeName":{"id":1990,"nodeType":"UserDefinedTypeName","pathNode":{"id":1989,"name":"Rounding","nameLocations":["6071:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"6071:8:9"},"referencedDeclaration":1774,"src":"6071:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:9"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2025,"src":"6113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:9"},"scope":2633,"src":"6012:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"6587:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2039,"nodeType":"IfStatement","src":"6597:45:9","trueBody":{"id":2038,"nodeType":"Block","src":"6609:33:9","statements":[{"expression":{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2032,"id":2037,"nodeType":"Return","src":"6623:8:9"}]}},{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"result","nameLocation":"7329:6:9","nodeType":"VariableDeclaration","scope":2136,"src":"7321:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2050,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"7349:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2043,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2305,2341],"referencedDeclaration":2305,"src":"7344:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:9"},{"id":2135,"nodeType":"UncheckedBlock","src":"7758:408:9","statements":[{"expression":{"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7792:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"7801:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7805:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2061,"nodeType":"ExpressionStatement","src":"7782:35:9"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7831:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7841:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"7850:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"7831:35:9"},{"expression":{"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7880:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7890:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"7899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7903:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2083,"nodeType":"ExpressionStatement","src":"7880:35:9"},{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7939:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"7948:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7952:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"7929:35:9"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"7988:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"7997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8001:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"7978:35:9"},{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8037:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8046:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8050:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"8027:35:9"},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8086:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8095:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2127,"nodeType":"ExpressionStatement","src":"8076:35:9"},{"expression":{"arguments":[{"id":2129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8136:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8144:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"8148:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2128,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"8132:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2032,"id":2134,"nodeType":"Return","src":"8125:30:9"}]}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"6317:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:9","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"a","nameLocation":"6552:1:9","nodeType":"VariableDeclaration","scope":2137,"src":"6544:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:9"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"6578:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:9"},"scope":2633,"src":"6530:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2172,"nodeType":"Block","src":"8348:161:9","statements":[{"id":2171,"nodeType":"UncheckedBlock","src":"8358:145:9","statements":[{"assignments":[2149],"declarations":[{"constant":false,"id":2149,"mutability":"mutable","name":"result","nameLocation":"8390:6:9","nodeType":"VariableDeclaration","scope":2171,"src":"8382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2153,"initialValue":{"arguments":[{"id":2151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2150,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2137,2173],"referencedDeclaration":2137,"src":"8399:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"8437:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2156,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"8449:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1774_$","typeString":"type(enum Math.Rounding)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"8449:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"src":"8437:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"8464:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"8473:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8482:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:9","trueExpression":{"hexValue":"31","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2147,"id":2170,"nodeType":"Return","src":"8420:72:9"}]}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"8178:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2173,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:9","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"a","nameLocation":"8294:1:9","nodeType":"VariableDeclaration","scope":2173,"src":"8286:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:9","nodeType":"VariableDeclaration","scope":2173,"src":"8297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"Rounding","nameLocations":["8297:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"8297:8:9"},"referencedDeclaration":1774,"src":"8297:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:9"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2173,"src":"8339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:9"},"scope":2633,"src":"8272:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"8694:922:9","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"result","nameLocation":"8712:6:9","nodeType":"VariableDeclaration","scope":2304,"src":"8704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:9"},{"id":2301,"nodeType":"UncheckedBlock","src":"8732:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8760:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"nodeType":"IfStatement","src":"8756:99:9","trueBody":{"id":2198,"nodeType":"Block","src":"8778:77:9","statements":[{"expression":{"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ExpressionStatement","src":"8796:13:9"},{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"8827:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8872:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"8868:96:9","trueBody":{"id":2213,"nodeType":"Block","src":"8889:75:9","statements":[{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8907:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"8907:12:9"},{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"8937:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2212,"nodeType":"ExpressionStatement","src":"8937:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8981:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2229,"nodeType":"IfStatement","src":"8977:96:9","trueBody":{"id":2228,"nodeType":"Block","src":"8998:75:9","statements":[{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9016:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"9016:12:9"},{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"9046:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9090:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2244,"nodeType":"IfStatement","src":"9086:96:9","trueBody":{"id":2243,"nodeType":"Block","src":"9107:75:9","statements":[{"expression":{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9125:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2238,"nodeType":"ExpressionStatement","src":"9125:12:9"},{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9155:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2242,"nodeType":"ExpressionStatement","src":"9155:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"IfStatement","src":"9195:93:9","trueBody":{"id":2258,"nodeType":"Block","src":"9215:73:9","statements":[{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9233:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"9233:11:9"},{"expression":{"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9262:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2257,"nodeType":"ExpressionStatement","src":"9262:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2274,"nodeType":"IfStatement","src":"9301:93:9","trueBody":{"id":2273,"nodeType":"Block","src":"9321:73:9","statements":[{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9339:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"nodeType":"ExpressionStatement","src":"9339:11:9"},{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9368:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2272,"nodeType":"ExpressionStatement","src":"9368:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9411:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2289,"nodeType":"IfStatement","src":"9407:93:9","trueBody":{"id":2288,"nodeType":"Block","src":"9427:73:9","statements":[{"expression":{"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2283,"nodeType":"ExpressionStatement","src":"9445:11:9"},{"expression":{"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9474:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2287,"nodeType":"ExpressionStatement","src":"9474:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"9517:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"nodeType":"IfStatement","src":"9513:64:9","trueBody":{"id":2299,"nodeType":"Block","src":"9533:44:9","statements":[{"expression":{"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9551:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2298,"nodeType":"ExpressionStatement","src":"9551:11:9"}]}}]},{"expression":{"id":2302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2180,"id":2303,"nodeType":"Return","src":"9596:13:9"}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"8515:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:9","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"value","nameLocation":"8655:5:9","nodeType":"VariableDeclaration","scope":2305,"src":"8647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:9"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"8685:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:9"},"scope":2633,"src":"8633:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"9849:165:9","statements":[{"id":2339,"nodeType":"UncheckedBlock","src":"9859:149:9","statements":[{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"result","nameLocation":"9891:6:9","nodeType":"VariableDeclaration","scope":2339,"src":"9883:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2321,"initialValue":{"arguments":[{"id":2319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"9905:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2318,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2305,2341],"referencedDeclaration":2305,"src":"9900:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"9932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"9942:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2324,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"9954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1774_$","typeString":"type(enum Math.Rounding)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"9954:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"src":"9942:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"9974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"9983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:9","trueExpression":{"hexValue":"31","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2315,"id":2338,"nodeType":"Return","src":"9925:72:9"}]}]},"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"9622:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:9","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"value","nameLocation":"9791:5:9","nodeType":"VariableDeclaration","scope":2341,"src":"9783:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:9","nodeType":"VariableDeclaration","scope":2341,"src":"9798:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"Rounding","nameLocations":["9798:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"9798:8:9"},"referencedDeclaration":1774,"src":"9798:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:9"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"9840:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:9"},"scope":2633,"src":"9769:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2469,"nodeType":"Block","src":"10201:854:9","statements":[{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"result","nameLocation":"10219:6:9","nodeType":"VariableDeclaration","scope":2469,"src":"10211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2352,"initialValue":{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:9"},{"id":2466,"nodeType":"UncheckedBlock","src":"10239:787:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2369,"nodeType":"IfStatement","src":"10263:103:9","trueBody":{"id":2368,"nodeType":"Block","src":"10286:80:9","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10304:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"10304:17:9"},{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"10339:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"10379:103:9","trueBody":{"id":2385,"nodeType":"Block","src":"10402:80:9","statements":[{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10420:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2380,"nodeType":"ExpressionStatement","src":"10420:17:9"},{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"nodeType":"ExpressionStatement","src":"10455:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10499:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2403,"nodeType":"IfStatement","src":"10495:103:9","trueBody":{"id":2402,"nodeType":"Block","src":"10518:80:9","statements":[{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"10536:17:9"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10571:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"10571:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"10611:100:9","trueBody":{"id":2419,"nodeType":"Block","src":"10633:78:9","statements":[{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10651:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"10651:16:9"},{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10685:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"nodeType":"ExpressionStatement","src":"10685:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2437,"nodeType":"IfStatement","src":"10724:100:9","trueBody":{"id":2436,"nodeType":"Block","src":"10746:78:9","statements":[{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10764:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"10764:16:9"},{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2435,"nodeType":"ExpressionStatement","src":"10798:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"10837:100:9","trueBody":{"id":2453,"nodeType":"Block","src":"10859:78:9","statements":[{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10877:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ExpressionStatement","src":"10877:16:9"},{"expression":{"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10911:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2452,"nodeType":"ExpressionStatement","src":"10911:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"10954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"nodeType":"IfStatement","src":"10950:66:9","trueBody":{"id":2464,"nodeType":"Block","src":"10972:44:9","statements":[{"expression":{"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"10990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2463,"nodeType":"ExpressionStatement","src":"10990:11:9"}]}}]},{"expression":{"id":2467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"11042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2348,"id":2468,"nodeType":"Return","src":"11035:13:9"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"10020:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:9","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"value","nameLocation":"10162:5:9","nodeType":"VariableDeclaration","scope":2470,"src":"10154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:9"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"10192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:9"},"scope":2633,"src":"10139:916:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"11290:167:9","statements":[{"id":2504,"nodeType":"UncheckedBlock","src":"11300:151:9","statements":[{"assignments":[2482],"declarations":[{"constant":false,"id":2482,"mutability":"mutable","name":"result","nameLocation":"11332:6:9","nodeType":"VariableDeclaration","scope":2504,"src":"11324:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2486,"initialValue":{"arguments":[{"id":2484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11347:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2483,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2470,2506],"referencedDeclaration":2470,"src":"11341:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"11374:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"11384:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2489,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"11396:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1774_$","typeString":"type(enum Math.Rounding)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"11396:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"src":"11384:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"11417:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:9","trueExpression":{"hexValue":"31","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2480,"id":2503,"nodeType":"Return","src":"11367:73:9"}]}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"11061:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:9","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"value","nameLocation":"11232:5:9","nodeType":"VariableDeclaration","scope":2506,"src":"11224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:9","nodeType":"VariableDeclaration","scope":2506,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"Rounding","nameLocations":["11239:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"11239:8:9"},"referencedDeclaration":1774,"src":"11239:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:9"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"11281:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:9"},"scope":2633,"src":"11209:248:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2592,"nodeType":"Block","src":"11771:600:9","statements":[{"assignments":[2515],"declarations":[{"constant":false,"id":2515,"mutability":"mutable","name":"result","nameLocation":"11789:6:9","nodeType":"VariableDeclaration","scope":2592,"src":"11781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2517,"initialValue":{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:9"},{"id":2589,"nodeType":"UncheckedBlock","src":"11809:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11837:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2532,"nodeType":"IfStatement","src":"11833:98:9","trueBody":{"id":2531,"nodeType":"Block","src":"11855:76:9","statements":[{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11873:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"nodeType":"ExpressionStatement","src":"11873:13:9"},{"expression":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"11904:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2530,"nodeType":"ExpressionStatement","src":"11904:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2547,"nodeType":"IfStatement","src":"11944:95:9","trueBody":{"id":2546,"nodeType":"Block","src":"11965:74:9","statements":[{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ExpressionStatement","src":"11983:12:9"},{"expression":{"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12013:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2545,"nodeType":"ExpressionStatement","src":"12013:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2562,"nodeType":"IfStatement","src":"12052:95:9","trueBody":{"id":2561,"nodeType":"Block","src":"12073:74:9","statements":[{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12091:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ExpressionStatement","src":"12091:12:9"},{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12121:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2560,"nodeType":"ExpressionStatement","src":"12121:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2577,"nodeType":"IfStatement","src":"12160:95:9","trueBody":{"id":2576,"nodeType":"Block","src":"12181:74:9","statements":[{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2571,"nodeType":"ExpressionStatement","src":"12199:12:9"},{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12229:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"12229:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"12272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2588,"nodeType":"IfStatement","src":"12268:64:9","trueBody":{"id":2587,"nodeType":"Block","src":"12288:44:9","statements":[{"expression":{"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2586,"nodeType":"ExpressionStatement","src":"12306:11:9"}]}}]},{"expression":{"id":2590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2513,"id":2591,"nodeType":"Return","src":"12351:13:9"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"11463:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:9","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"value","nameLocation":"11732:5:9","nodeType":"VariableDeclaration","scope":2593,"src":"11724:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:9"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2593,"src":"11762:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:9"},"scope":2633,"src":"11708:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"12608:174:9","statements":[{"id":2630,"nodeType":"UncheckedBlock","src":"12618:158:9","statements":[{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"result","nameLocation":"12650:6:9","nodeType":"VariableDeclaration","scope":2630,"src":"12642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"initialValue":{"arguments":[{"id":2607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"12666:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2606,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2593,2632],"referencedDeclaration":2593,"src":"12659:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"12693:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"12703:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2612,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"12715:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1774_$","typeString":"type(enum Math.Rounding)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"12715:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"src":"12703:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"12736:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"12751:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:9","trueExpression":{"hexValue":"31","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2603,"id":2629,"nodeType":"Return","src":"12686:79:9"}]}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"12377:144:9","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:9","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"value","nameLocation":"12550:5:9","nodeType":"VariableDeclaration","scope":2632,"src":"12542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:9","nodeType":"VariableDeclaration","scope":2632,"src":"12557:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"},"typeName":{"id":2598,"nodeType":"UserDefinedTypeName","pathNode":{"id":2597,"name":"Rounding","nameLocations":["12557:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1774,"src":"12557:8:9"},"referencedDeclaration":1774,"src":"12557:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1774","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:9"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"12599:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:9"},"scope":2633,"src":"12526:256:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2634,"src":"202:12582:9","usedErrors":[]}],"src":"103:12682:9"},"id":9},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2738]},"id":2739,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2635,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"134:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2738,"linearizedBaseContracts":[2738],"name":"SignedMath","nameLocation":"223:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2653,"nodeType":"Block","src":"375:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"392:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2647,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"396:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"404:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:10","trueExpression":{"id":2649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"400:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2645,"id":2652,"nodeType":"Return","src":"385:20:10"}]},"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"240:66:10","text":" @dev Returns the largest of two signed numbers."},"id":2654,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:10","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"a","nameLocation":"331:1:10","nodeType":"VariableDeclaration","scope":2654,"src":"324:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2638,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"b","nameLocation":"341:1:10","nodeType":"VariableDeclaration","scope":2654,"src":"334:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2640,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:10"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2654,"src":"367:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2643,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:10"},"scope":2738,"src":"311:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2671,"nodeType":"Block","src":"554:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"571:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"575:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2668,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"583:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:10","trueExpression":{"id":2667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"579:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2663,"id":2670,"nodeType":"Return","src":"564:20:10"}]},"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"418:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":2672,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:10","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"a","nameLocation":"510:1:10","nodeType":"VariableDeclaration","scope":2672,"src":"503:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2656,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"b","nameLocation":"520:1:10","nodeType":"VariableDeclaration","scope":2672,"src":"513:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2658,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:10"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2672,"src":"546:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2661,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:10"},"scope":2738,"src":"490:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2715,"nodeType":"Block","src":"796:162:10","statements":[{"assignments":[2683],"declarations":[{"constant":false,"id":2683,"mutability":"mutable","name":"x","nameLocation":"865:1:10","nodeType":"VariableDeclaration","scope":2715,"src":"858:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2682,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2696,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"870:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"874:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"881:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"885:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2697,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"910:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2702,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"930:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:10","typeDescriptions":{}}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2698,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:10","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"944:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"948:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2681,"id":2714,"nodeType":"Return","src":"903:48:10"}]},"documentation":{"id":2673,"nodeType":"StructuredDocumentation","src":"597:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:10","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"a","nameLocation":"752:1:10","nodeType":"VariableDeclaration","scope":2716,"src":"745:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2674,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"b","nameLocation":"762:1:10","nodeType":"VariableDeclaration","scope":2716,"src":"755:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2676,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:10"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"788:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2679,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:10"},"scope":2738,"src":"728:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"1102:158:10","statements":[{"id":2735,"nodeType":"UncheckedBlock","src":"1112:142:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1227:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:10","subExpression":{"id":2730,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1241:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:10","trueExpression":{"id":2729,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"1236:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2723,"id":2734,"nodeType":"Return","src":"1212:31:10"}]}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"964:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:10","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"n","nameLocation":"1067:1:10","nodeType":"VariableDeclaration","scope":2737,"src":"1060:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2718,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:10"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2737,"src":"1093:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:10"},"scope":2738,"src":"1047:213:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2739,"src":"215:1047:10","usedErrors":[]}],"src":"109:1154:10"},"id":10},"contracts/IntentxFeeRebate.sol":{"ast":{"absolutePath":"contracts/IntentxFeeRebate.sol","exportedSymbols":{"AddressUpgradeable":[1121],"ContextUpgradeable":[1172],"ECDSA":[1767],"IERC20PermitUpgradeable":[415],"IERC20Upgradeable":[379],"Initializable":[301],"IntentXFeeRebate":[3038],"Math":[2633],"OwnableUpgradeable":[132],"SafeERC20Upgradeable":[791],"SignedMath":[2738],"Strings":[1401]},"id":3039,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2740,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"40:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":2741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3039,"sourceUnit":1768,"src":"65:62:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":2742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3039,"sourceUnit":380,"src":"128:79:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","id":2743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3039,"sourceUnit":792,"src":"208:88:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3039,"sourceUnit":133,"src":"297:75:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2745,"name":"OwnableUpgradeable","nameLocations":["403:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"403:18:11"},"id":2746,"nodeType":"InheritanceSpecifier","src":"403:18:11"}],"canonicalName":"IntentXFeeRebate","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3038,"linearizedBaseContracts":[3038,132,1172,301],"name":"IntentXFeeRebate","nameLocation":"383:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2749,"libraryName":{"id":2747,"name":"ECDSA","nameLocations":["434:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1767,"src":"434:5:11"},"nodeType":"UsingForDirective","src":"428:24:11","typeName":{"id":2748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"444:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2753,"libraryName":{"id":2750,"name":"SafeERC20Upgradeable","nameLocations":["463:20:11"],"nodeType":"IdentifierPath","referencedDeclaration":791,"src":"463:20:11"},"nodeType":"UsingForDirective","src":"457:49:11","typeName":{"id":2752,"nodeType":"UserDefinedTypeName","pathNode":{"id":2751,"name":"IERC20Upgradeable","nameLocations":["488:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"488:17:11"},"referencedDeclaration":379,"src":"488:17:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$379","typeString":"contract IERC20Upgradeable"}}},{"constant":false,"functionSelector":"d7a105ec","id":2755,"mutability":"mutable","name":"intentxTrustedAddress","nameLocation":"564:21:11","nodeType":"VariableDeclaration","scope":3038,"src":"549:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e6fd48bc","id":2757,"mutability":"mutable","name":"startTimestamp","nameLocation":"630:14:11","nodeType":"VariableDeclaration","scope":3038,"src":"618:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint","nodeType":"ElementaryTypeName","src":"618:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"750142e6","id":2759,"mutability":"mutable","name":"totalReward","nameLocation":"662:11:11","nodeType":"VariableDeclaration","scope":3038,"src":"650:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint","nodeType":"ElementaryTypeName","src":"650:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c884ef83","id":2763,"mutability":"mutable","name":"claimed","nameLocation":"715:7:11","nodeType":"VariableDeclaration","scope":3038,"src":"680:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2762,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"688:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"680:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"45cad8c10023de80f4c0672ff6c283b671e11aa93c92b9380cdf060d2790da52","id":2769,"name":"Reward","nameLocation":"787:6:11","nodeType":"EventDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"802:9:11","nodeType":"VariableDeclaration","scope":2769,"src":"794:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2767,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"821:6:11","nodeType":"VariableDeclaration","scope":2769,"src":"813:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"813:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"793:35:11"},"src":"781:48:11"},{"anonymous":false,"eventSelector":"34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7","id":2777,"name":"Claim","nameLocation":"840:5:11","nodeType":"EventDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"862:4:11","nodeType":"VariableDeclaration","scope":2777,"src":"846:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"876:9:11","nodeType":"VariableDeclaration","scope":2777,"src":"868:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2775,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"895:6:11","nodeType":"VariableDeclaration","scope":2777,"src":"887:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:57:11"},"src":"834:69:11"},{"anonymous":false,"eventSelector":"e26c879d728ec1a6c6f55c2809dd8c7f9d67beca07940f3020aca5d96e0073db","id":2781,"name":"SetIntentXTrustedAddress","nameLocation":"914:24:11","nodeType":"EventDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"indexed":true,"mutability":"mutable","name":"intentxTrustedAddress","nameLocation":"955:21:11","nodeType":"VariableDeclaration","scope":2781,"src":"939:37:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:39:11"},"src":"908:70:11"},{"errorSelector":"0c092543","id":2783,"name":"DayNotFinished","nameLocation":"1005:14:11","nodeType":"ErrorDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"1019:2:11"},"src":"999:23:11"},{"errorSelector":"8baa579f","id":2785,"name":"InvalidSignature","nameLocation":"1033:16:11","nodeType":"ErrorDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"1049:2:11"},"src":"1027:25:11"},{"body":{"id":2809,"nodeType":"Block","src":"1183:196:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2793,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1193:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1193:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2795,"nodeType":"ExpressionStatement","src":"1193:16:11"},{"expression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"1220:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2797,"name":"_intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1244:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1220:46:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2799,"nodeType":"ExpressionStatement","src":"1220:46:11"},{"expression":{"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2800,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"1276:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2801,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1293:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1299:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1293:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1276:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2804,"nodeType":"ExpressionStatement","src":"1276:32:11"},{"eventCall":{"arguments":[{"id":2806,"name":"_intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1349:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2805,"name":"SetIntentXTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"1324:24:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"EmitStatement","src":"1319:53:11"}]},"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"1058:35:11","text":"@notice Initialize the contract"},"functionSelector":"c4d66de8","id":2810,"implemented":true,"kind":"function","modifiers":[{"id":2791,"kind":"modifierInvocation","modifierName":{"id":2790,"name":"initializer","nameLocations":["1171:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1171:11:11"},"nodeType":"ModifierInvocation","src":"1171:11:11"}],"name":"initialize","nameLocation":"1107:10:11","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"_intentxTrustedAddress","nameLocation":"1135:22:11","nodeType":"VariableDeclaration","scope":2810,"src":"1127:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1117:46:11"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[],"src":"1183:0:11"},"scope":3038,"src":"1098:281:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2826,"nodeType":"Block","src":"1590:126:11","statements":[{"expression":{"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2818,"name":"intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"1600:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2819,"name":"_intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1624:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1600:46:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2821,"nodeType":"ExpressionStatement","src":"1600:46:11"},{"eventCall":{"arguments":[{"id":2823,"name":"_intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1686:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2822,"name":"SetIntentXTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"1661:24:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1661:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2825,"nodeType":"EmitStatement","src":"1656:53:11"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"1385:113:11","text":"@notice Set the reward token\n @param _intentxTrustedAddress address of the new IntentX Trusted Backend"},"functionSelector":"96b18c12","id":2827,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":2816,"kind":"modifierInvocation","modifierName":{"id":2815,"name":"onlyOwner","nameLocations":["1578:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1578:9:11"},"nodeType":"ModifierInvocation","src":"1578:11:11"}],"name":"setIntentxTrustedAddress","nameLocation":"1512:24:11","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"_intentxTrustedAddress","nameLocation":"1545:22:11","nodeType":"VariableDeclaration","scope":2827,"src":"1537:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1536:32:11"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[],"src":"1590:0:11"},"scope":3038,"src":"1503:213:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2851,"nodeType":"Block","src":"1886:151:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1904:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1915:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1919:5:11","memberName":"value","nodeType":"MemberAccess","src":"1915:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1904:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820616d6f756e742073656e74","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1926:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4c1dfc67b440e06228628f9ad2134d6fc08db9b55947d42c92af3c9618b045a","typeString":"literal_string \"Not enough amount sent\""},"value":"Not enough amount sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4c1dfc67b440e06228628f9ad2134d6fc08db9b55947d42c92af3c9618b045a","typeString":"literal_string \"Not enough amount sent\""}],"id":2833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1896:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"ExpressionStatement","src":"1896:55:11"},{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"totalReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"1961:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2842,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1961:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"1961:22:11"},{"eventCall":{"arguments":[{"expression":{"id":2846,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2005:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2011:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2005:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2848,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"2022:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"1998:6:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1998:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2850,"nodeType":"EmitStatement","src":"1993:37:11"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"1722:111:11","text":"@notice Fill reward for a given day from the token contract\n @param _amount amount of reward to fill"},"functionSelector":"3fda5389","id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"fill","nameLocation":"1847:4:11","nodeType":"FunctionDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"_amount","nameLocation":"1860:7:11","nodeType":"VariableDeclaration","scope":2852,"src":"1852:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1851:17:11"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[],"src":"1886:0:11"},"scope":3038,"src":"1838:199:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2951,"nodeType":"Block","src":"2184:838:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2864,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2202:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2208:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2202:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2866,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"2221:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2202:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f542053544152544544","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2237:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ded270ad198ddeba624ddb04f6cd2c013f91ba70613b95f0f506a715249adc73","typeString":"literal_string \"NOT STARTED\""},"value":"NOT STARTED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ded270ad198ddeba624ddb04f6cd2c013f91ba70613b95f0f506a715249adc73","typeString":"literal_string \"NOT STARTED\""}],"id":2863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2194:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2194:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2870,"nodeType":"ExpressionStatement","src":"2194:57:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2270:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2274:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2270:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2874,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"2284:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2270:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420796f757220636c61696d","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2291:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7660e4d8f7088b646f31333b47775ecdcd2a14846d2d10410eea5c3e13e6f0ca","typeString":"literal_string \"Not your claim\""},"value":"Not your claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7660e4d8f7088b646f31333b47775ecdcd2a14846d2d10410eea5c3e13e6f0ca","typeString":"literal_string \"Not your claim\""}],"id":2871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2261:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2878,"nodeType":"ExpressionStatement","src":"2261:47:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"2327:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2360:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2352:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"2352:7:11","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2352:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2327:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e74656e745820547275737465642041646472657373206e6f7420736574207965742e","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2364:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_96d20a50da07d1e03574c2507d315d63204105ff475241c13dfdc5f7c5f326f3","typeString":"literal_string \"IntentX Trusted Address not set yet.\""},"value":"IntentX Trusted Address not set yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96d20a50da07d1e03574c2507d315d63204105ff475241c13dfdc5f7c5f326f3","typeString":"literal_string \"IntentX Trusted Address not set yet.\""}],"id":2879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2318:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2318:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2888,"nodeType":"ExpressionStatement","src":"2318:85:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"_amountMnt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2419:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":2890,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2432:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2893,"indexExpression":{"expression":{"id":2891,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2440:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2444:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2440:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2432:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2419:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"2414:602:11","trueBody":{"id":2949,"nodeType":"Block","src":"2454:562:11","statements":[{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"messageHash","nameLocation":"2489:11:11","nodeType":"VariableDeclaration","scope":2949,"src":"2481:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2902,"initialValue":{"arguments":[{"id":2898,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"2519:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2899,"name":"_amountMnt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2526:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2900,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2538:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2897,"name":"getMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"2503:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256) pure returns (bytes32)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2503:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2481:68:11"},{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"ethSignedMessageHash","nameLocation":"2571:20:11","nodeType":"VariableDeclaration","scope":2949,"src":"2563:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2563:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2908,"initialValue":{"arguments":[{"id":2906,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2618:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2905,"name":"getEthSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2594:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2594:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2563:67:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2911,"name":"ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"2668:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2912,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"2690:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2910,"name":"recoverSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"2654:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2654:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2914,"name":"intentxTrustedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"2704:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2654:71:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6572203d2120547275737465642e20","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2727:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ccbc8d110690c26996b747d54162e0eac850b68d67f8d93a1b7bbf0e40ee36c","typeString":"literal_string \"Signer =! Trusted. \""},"value":"Signer =! Trusted. "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ccbc8d110690c26996b747d54162e0eac850b68d67f8d93a1b7bbf0e40ee36c","typeString":"literal_string \"Signer =! Trusted. \""}],"id":2909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2645:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:104:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2918,"nodeType":"ExpressionStatement","src":"2645:104:11"},{"assignments":[2920],"declarations":[{"constant":false,"id":2920,"mutability":"mutable","name":"withdrawableAmount","nameLocation":"2784:18:11","nodeType":"VariableDeclaration","scope":2949,"src":"2776:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2927,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"_amountMnt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2805:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":2922,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2818:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2925,"indexExpression":{"expression":{"id":2923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2830:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2826:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2818:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2805:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2776:61:11"},{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2928,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2851:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2931,"indexExpression":{"expression":{"id":2929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2859:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2863:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2859:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2851:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2932,"name":"_amountMnt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2873:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"2851:32:11"},{"expression":{"components":[{"expression":{"id":2935,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2899:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2903:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2899:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2938,"name":"withdrawableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2911:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2898:32:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"id":2940,"nodeType":"ExpressionStatement","src":"2898:32:11"},{"eventCall":{"arguments":[{"expression":{"id":2942,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2956:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2960:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2956:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2944,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2968:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2974:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2968:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2946,"name":"withdrawableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"2986:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"2950:5:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"EmitStatement","src":"2945:60:11"}]}}]},"functionSelector":"2ada8a32","id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"2052:5:11","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"_user","nameLocation":"2075:5:11","nodeType":"VariableDeclaration","scope":2952,"src":"2067:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"_amountMnt","nameLocation":"2098:10:11","nodeType":"VariableDeclaration","scope":2952,"src":"2090:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"_timestamp","nameLocation":"2126:10:11","nodeType":"VariableDeclaration","scope":2952,"src":"2118:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"signature","nameLocation":"2159:9:11","nodeType":"VariableDeclaration","scope":2952,"src":"2146:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2859,"name":"bytes","nodeType":"ElementaryTypeName","src":"2146:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2057:117:11"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[],"src":"2184:0:11"},"scope":3038,"src":"2043:979:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2972,"nodeType":"Block","src":"3165:86:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2966,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"3209:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2967,"name":"_amountIntentX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"3216:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2968,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3232:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2964,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3192:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3196:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"3192:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3192:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2963,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3182:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3182:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2962,"id":2971,"nodeType":"Return","src":"3175:69:11"}]},"functionSelector":"d2b0737b","id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"getMessageHash","nameLocation":"3037:14:11","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"_user","nameLocation":"3069:5:11","nodeType":"VariableDeclaration","scope":2973,"src":"3061:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"_amountIntentX","nameLocation":"3089:14:11","nodeType":"VariableDeclaration","scope":2973,"src":"3084:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint","nodeType":"ElementaryTypeName","src":"3084:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"_timestamp","nameLocation":"3118:10:11","nodeType":"VariableDeclaration","scope":2973,"src":"3113:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint","nodeType":"ElementaryTypeName","src":"3113:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3051:83:11"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"3156:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3156:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3155:9:11"},"scope":3038,"src":"3028:223:11","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2988,"nodeType":"Block","src":"3370:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3443:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":2984,"name":"_messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"3479:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2981,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3426:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3430:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"3426:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3426:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2980,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3399:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3399:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2979,"id":2987,"nodeType":"Return","src":"3380:126:11"}]},"functionSelector":"fa540801","id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"getEthSignedMessageHash","nameLocation":"3266:23:11","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"_messageHash","nameLocation":"3298:12:11","nodeType":"VariableDeclaration","scope":2989,"src":"3290:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3289:22:11"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2989,"src":"3357:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3357:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3356:9:11"},"scope":3038,"src":"3257:256:11","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3015,"nodeType":"Block","src":"3657:136:11","statements":[{"assignments":[2999,3001,3003],"declarations":[{"constant":false,"id":2999,"mutability":"mutable","name":"r","nameLocation":"3676:1:11","nodeType":"VariableDeclaration","scope":3015,"src":"3668:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3668:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"s","nameLocation":"3687:1:11","nodeType":"VariableDeclaration","scope":3015,"src":"3679:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3679:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"v","nameLocation":"3696:1:11","nodeType":"VariableDeclaration","scope":3015,"src":"3690:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3002,"name":"uint8","nodeType":"ElementaryTypeName","src":"3690:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"id":3005,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"3716:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3004,"name":"splitSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3701:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"function (bytes memory) pure returns (bytes32,bytes32,uint8)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$","typeString":"tuple(bytes32,bytes32,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"3667:60:11"},{"expression":{"arguments":[{"id":3009,"name":"_ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3755:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3010,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3778:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3011,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"3781:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3012,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3784:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3008,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"3745:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2997,"id":3014,"nodeType":"Return","src":"3738:48:11"}]},"functionSelector":"97aba7f9","id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"recoverSigner","nameLocation":"3529:13:11","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"_ethSignedMessageHash","nameLocation":"3551:21:11","nodeType":"VariableDeclaration","scope":3016,"src":"3543:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3543:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"_signature","nameLocation":"3587:10:11","nodeType":"VariableDeclaration","scope":3016,"src":"3574:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2992,"name":"bytes","nodeType":"ElementaryTypeName","src":"3574:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3542:56:11"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3016,"src":"3644:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"3644:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3643:9:11"},"scope":3038,"src":"3520:273:11","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3036,"nodeType":"Block","src":"3967:220:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3028,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3985:3:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:6:11","memberName":"length","nodeType":"MemberAccess","src":"3985:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"3985:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207369676e6174757265206c656e677468","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4003:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87","typeString":"literal_string \"invalid signature length\""},"value":"invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87","typeString":"literal_string \"invalid signature length\""}],"id":3027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3977:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"ExpressionStatement","src":"3977:53:11"},{"AST":{"nodeType":"YulBlock","src":"4050:131:11","statements":[{"nodeType":"YulAssignment","src":"4064:24:11","value":{"arguments":[{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"4079:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4084:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4075:3:11"},"nodeType":"YulFunctionCall","src":"4075:12:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4069:5:11"},"nodeType":"YulFunctionCall","src":"4069:19:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4064:1:11"}]},{"nodeType":"YulAssignment","src":"4101:24:11","value":{"arguments":[{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"4116:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4121:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:11"},"nodeType":"YulFunctionCall","src":"4112:12:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4106:5:11"},"nodeType":"YulFunctionCall","src":"4106:19:11"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"4101:1:11"}]},{"nodeType":"YulAssignment","src":"4138:33:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4148:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"sig","nodeType":"YulIdentifier","src":"4161:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4157:3:11"},"nodeType":"YulFunctionCall","src":"4157:12:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4151:5:11"},"nodeType":"YulFunctionCall","src":"4151:19:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"4143:4:11"},"nodeType":"YulFunctionCall","src":"4143:28:11"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"4138:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3021,"isOffset":false,"isSlot":false,"src":"4064:1:11","valueSize":1},{"declaration":3023,"isOffset":false,"isSlot":false,"src":"4101:1:11","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"4079:3:11","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"4116:3:11","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"4161:3:11","valueSize":1},{"declaration":3025,"isOffset":false,"isSlot":false,"src":"4138:1:11","valueSize":1}],"id":3035,"nodeType":"InlineAssembly","src":"4041:140:11"}]},"functionSelector":"a7bb5803","id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"splitSignature","nameLocation":"3808:14:11","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"sig","nameLocation":"3836:3:11","nodeType":"VariableDeclaration","scope":3037,"src":"3823:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3823:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3822:18:11"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"r","nameLocation":"3907:1:11","nodeType":"VariableDeclaration","scope":3037,"src":"3899:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"s","nameLocation":"3930:1:11","nodeType":"VariableDeclaration","scope":3037,"src":"3922:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3922:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"v","nameLocation":"3951:1:11","nodeType":"VariableDeclaration","scope":3037,"src":"3945:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3024,"name":"uint8","nodeType":"ElementaryTypeName","src":"3945:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3885:77:11"},"scope":3038,"src":"3799:388:11","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":3039,"src":"374:3816:11","usedErrors":[2783,2785]}],"src":"40:4150:11"},"id":11}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1171,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":11,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":131,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"SafeERC20Upgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220210204439cd70b147c078b08af3157e2af6cf52c5ab14ac778b9fd9f912afecf64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 MUL DIV NUMBER SWAP13 0xD7 SIGNEXTEND EQ PUSH29 0x78B08AF3157E2AF6CF52C5AB14AC778B9FD9F912AFECF64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"734:6366:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;734:6366:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220210204439cd70b147c078b08af3157e2af6cf52c5ab14ac778b9fd9f912afecf64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 MUL DIV NUMBER SWAP13 0xD7 SIGNEXTEND EQ PUSH29 0x78B08AF3157E2AF6CF52C5AB14AC778B9FD9F912AFECF64736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"734:6366:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220804e5c8cb456cc0b31cc6278e2d0d66a0a37cb2c5fad670880d4a5d5d327b4c564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0x5C DUP13 0xB4 JUMP 0xCC SIGNEXTEND BALANCE 0xCC PUSH3 0x78E2D0 0xD6 PUSH11 0xA37CB2C5FAD670880D4A5 0xD5 0xD3 0x27 0xB4 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220804e5c8cb456cc0b31cc6278e2d0d66a0a37cb2c5fad670880d4a5d5d327b4c564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x4E 0x5C DUP13 0xB4 JUMP 0xCC SIGNEXTEND BALANCE 0xCC PUSH3 0x78E2D0 0xD6 PUSH11 0xA37CB2C5FAD670880D4A5 0xD5 0xD3 0x27 0xB4 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1171,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220157731dcc3056f7ee4d1a8c1631a133377bb680680f74d598062dab4cb9b43e364736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH24 0x31DCC3056F7EE4D1A8C1631A133377BB680680F74D598062 0xDA 0xB4 0xCB SWAP12 NUMBER 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220157731dcc3056f7ee4d1a8c1631a133377bb680680f74d598062dab4cb9b43e364736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH24 0x31DCC3056F7EE4D1A8C1631A133377BB680680F74D598062 0xDA 0xB4 0xCB SWAP12 NUMBER 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c316bb5b0b82e55cdde2c136e5da38357559e250b41af72d3f70c27e223901a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR BALANCE PUSH12 0xB5B0B82E55CDDE2C136E5DA3 DUP4 JUMPI SSTORE SWAP15 0x25 SIGNEXTEND COINBASE 0xAF PUSH19 0xD3F70C27E223901A64736F6C63430008120033 ","sourceMap":"369:8761:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c316bb5b0b82e55cdde2c136e5da38357559e250b41af72d3f70c27e223901a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR BALANCE PUSH12 0xB5B0B82E55CDDE2C136E5DA3 DUP4 JUMPI SSTORE SWAP15 0x25 SIGNEXTEND COINBASE 0xAF PUSH19 0xD3F70C27E223901A64736F6C63430008120033 ","sourceMap":"369:8761:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9440ec23afc308f8f56e1228443d755c34f423ffc1b6d9e756994469ff14b2f64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PREVRANDAO 0xE 0xC2 GASPRICE 0xFC ADDRESS DUP16 DUP16 JUMP 0xE1 0x22 DUP5 NUMBER 0xD7 SSTORE 0xC3 0x4F TIMESTAMP EXTCODEHASH 0xFC SHL PUSH14 0x9E756994469FF14B2F64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"202:12582:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9440ec23afc308f8f56e1228443d755c34f423ffc1b6d9e756994469ff14b2f64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PREVRANDAO 0xE 0xC2 GASPRICE 0xFC ADDRESS DUP16 DUP16 JUMP 0xE1 0x22 DUP5 NUMBER 0xD7 SSTORE 0xC3 0x4F TIMESTAMP EXTCODEHASH 0xFC SHL PUSH14 0x9E756994469FF14B2F64736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"202:12582:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b5f0b8f9ed92aea2967d35f3c4dbda5c19e1d53d370f05045621afa37f3218164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x5F0B8F9ED92AEA2967D35F3C4DBDA5C19E1D53D370F05045621AFA37 RETURN 0x21 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"215:1047:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b5f0b8f9ed92aea2967d35f3c4dbda5c19e1d53d370f05045621afa37f3218164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x5F0B8F9ED92AEA2967D35F3C4DBDA5C19E1D53D370F05045621AFA37 RETURN 0x21 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"215:1047:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IntentxFeeRebate.sol":{"IntentXFeeRebate":{"abi":[{"inputs":[],"name":"DayNotFinished","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Reward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"intentxTrustedAddress","type":"address"}],"name":"SetIntentXTrustedAddress","type":"event"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amountMnt","type":"uint256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"fill","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_messageHash","type":"bytes32"}],"name":"getEthSignedMessageHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amountIntentX","type":"uint256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"getMessageHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_intentxTrustedAddress","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"intentxTrustedAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_ethSignedMessageHash","type":"bytes32"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"recoverSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_intentxTrustedAddress","type":"address"}],"name":"setIntentxTrustedAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"sig","type":"bytes"}],"name":"splitSignature","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"startTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610efd806100206000396000f3fe6080604052600436106100e85760003560e01c8063a7bb58031161008a578063d7a105ec11610059578063d7a105ec146102c7578063e6fd48bc146102e7578063f2fde38b146102fd578063fa5408011461031d57600080fd5b8063a7bb5803146101d2578063c4d66de814610210578063c884ef8314610230578063d2b0737b1461025d57600080fd5b8063750142e6116100c6578063750142e6146101375780638da5cb5b1461016057806396b18c121461019257806397aba7f9146101b257600080fd5b80632ada8a32146100ed5780633fda53891461010f578063715018a614610122575b600080fd5b3480156100f957600080fd5b5061010d610108366004610d1f565b61038b565b005b61010d61011d366004610d80565b61063a565b34801561012e57600080fd5b5061010d6106dc565b34801561014357600080fd5b5061014d60675481565b6040519081526020015b60405180910390f35b34801561016c57600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610157565b34801561019e57600080fd5b5061010d6101ad366004610d99565b6106f0565b3480156101be57600080fd5b5061017a6101cd366004610dbb565b61074f565b3480156101de57600080fd5b506101f26101ed366004610e02565b6107cf565b60408051938452602084019290925260ff1690820152606001610157565b34801561021c57600080fd5b5061010d61022b366004610d99565b610843565b34801561023c57600080fd5b5061014d61024b366004610d99565b60686020526000908152604090205481565b34801561026957600080fd5b5061014d610278366004610e3f565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052605481018290526000906074016040516020818303038152906040528051906020012090509392505050565b3480156102d357600080fd5b5060655461017a906001600160a01b031681565b3480156102f357600080fd5b5061014d60665481565b34801561030957600080fd5b5061010d610318366004610d99565b6109da565b34801561032957600080fd5b5061014d610338366004610d80565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6066544210156103e25760405162461bcd60e51b815260206004820152600b60248201527f4e4f54205354415254454400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b336001600160a01b0385161461043a5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420796f757220636c61696d00000000000000000000000000000000000060448201526064016103d9565b6065546001600160a01b03166104b75760405162461bcd60e51b8152602060048201526024808201527f496e74656e745820547275737465642041646472657373206e6f74207365742060448201527f7965742e0000000000000000000000000000000000000000000000000000000060648201526084016103d9565b336000908152606860205260409020548311156106345760408051606086901b6bffffffffffffffffffffffff1916602080830191909152603482018690526054808301869052835180840390910181526074830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a333200000000609484015260b08084018290528451808503909101815260d090930190935281519101206065546001600160a01b031661056f828561074f565b6001600160a01b0316146105c55760405162461bcd60e51b815260206004820152601360248201527f5369676e6572203d2120547275737465642e200000000000000000000000000060448201526064016103d9565b336000908152606860205260408120546105df9087610ea1565b336000818152606860209081526040918290208a9055815142815290810184905292935090917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a25050505b50505050565b3481146106895760405162461bcd60e51b815260206004820152601660248201527f4e6f7420656e6f75676820616d6f756e742073656e740000000000000000000060448201526064016103d9565b806067600082825461069b9190610eb4565b909155505060408051428152602081018390527f45cad8c10023de80f4c0672ff6c283b671e11aa93c92b9380cdf060d2790da52910160405180910390a150565b6106e4610a6a565b6106ee6000610ac4565b565b6106f8610a6a565b6065805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fe26c879d728ec1a6c6f55c2809dd8c7f9d67beca07940f3020aca5d96e0073db90600090a250565b60008060008061075e856107cf565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa1580156107b9573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600080600083516041146108255760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016103d9565b50505060208101516040820151606090920151909260009190911a90565b600054610100900460ff16158080156108635750600054600160ff909116105b8061087d5750303b15801561087d575060005460ff166001145b6108ef5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103d9565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610930576000805461ff0019166101001790555b610938610b23565b6065805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155426066556040517fe26c879d728ec1a6c6f55c2809dd8c7f9d67beca07940f3020aca5d96e0073db90600090a280156109d6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6109e2610a6a565b6001600160a01b038116610a5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d9565b610a6781610ac4565b50565b6033546001600160a01b031633146106ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d9565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ba05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d9565b6106ee600054610100900460ff16610c205760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d9565b6106ee33610ac4565b80356001600160a01b0381168114610c4057600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610c8557600080fd5b813567ffffffffffffffff80821115610ca057610ca0610c45565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610ce657610ce6610c45565b81604052838152866020858801011115610cff57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610d3557600080fd5b610d3e85610c29565b93506020850135925060408501359150606085013567ffffffffffffffff811115610d6857600080fd5b610d7487828801610c74565b91505092959194509250565b600060208284031215610d9257600080fd5b5035919050565b600060208284031215610dab57600080fd5b610db482610c29565b9392505050565b60008060408385031215610dce57600080fd5b82359150602083013567ffffffffffffffff811115610dec57600080fd5b610df885828601610c74565b9150509250929050565b600060208284031215610e1457600080fd5b813567ffffffffffffffff811115610e2b57600080fd5b610e3784828501610c74565b949350505050565b600080600060608486031215610e5457600080fd5b610e5d84610c29565b95602085013595506040909401359392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156107c9576107c9610e72565b808201808211156107c9576107c9610e7256fea264697066735822122002daea9ef87b0769ba65182ea0ff273a0dac8002be74b02f38834c74b198a63f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEFD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7A105EC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD7A105EC EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xD2B0737B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x750142E6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x96B18C12 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2ADA8A32 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x3FDA5389 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x6DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x66 SLOAD TIMESTAMP LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F542053544152544544000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420796F757220636C61696D000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x496E74656E745820547275737465642041646472657373206E6F742073657420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7965742E00000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP7 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x54 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x74 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x94 DUP5 ADD MSTORE PUSH1 0xB0 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xD0 SWAP1 SWAP4 ADD SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x56F DUP3 DUP6 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572203D2120547275737465642E2000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5DF SWAP1 DUP8 PUSH2 0xEA1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE DUP2 MLOAD TIMESTAMP DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820616D6F756E742073656E7400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST DUP1 PUSH1 0x67 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x45CAD8C10023DE80F4C0672FF6C283B671E11AA93C92B9380CDF060D2790DA52 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6E4 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x6EE PUSH1 0x0 PUSH2 0xAC4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE26C879D728EC1A6C6F55C2809DD8C7F9D67BECA07940F3020ACA5D96E0073DB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x75E DUP6 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x863 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x87D JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x938 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x66 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE26C879D728EC1A6C6F55C2809DD8C7F9D67BECA07940F3020ACA5D96E0073DB SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0xA67 DUP2 PUSH2 0xAC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x6EE PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x6EE CALLER PUSH2 0xAC4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE6 PUSH2 0xC45 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3E DUP6 PUSH2 0xC29 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD74 DUP8 DUP3 DUP9 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF8 DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE37 DUP5 DUP3 DUP6 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5D DUP5 PUSH2 0xC29 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0xE72 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0xE72 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDA 0xEA SWAP15 0xF8 PUSH28 0x769BA65182EA0FF273A0DAC8002BE74B02F38834C74B198A63F6473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"374:3816:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_27":{"entryPoint":2851,"id":27,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_38":{"entryPoint":null,"id":38,"parameterSlots":0,"returnSlots":0},"@_checkOwner_69":{"entryPoint":2666,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_1149":{"entryPoint":null,"id":1149,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_126":{"entryPoint":2756,"id":126,"parameterSlots":1,"returnSlots":0},"@claim_2952":{"entryPoint":907,"id":2952,"parameterSlots":4,"returnSlots":0},"@claimed_2763":{"entryPoint":null,"id":2763,"parameterSlots":0,"returnSlots":0},"@fill_2852":{"entryPoint":1594,"id":2852,"parameterSlots":1,"returnSlots":0},"@getEthSignedMessageHash_2989":{"entryPoint":null,"id":2989,"parameterSlots":1,"returnSlots":1},"@getMessageHash_2973":{"entryPoint":null,"id":2973,"parameterSlots":3,"returnSlots":1},"@initialize_2810":{"entryPoint":2115,"id":2810,"parameterSlots":1,"returnSlots":0},"@intentxTrustedAddress_2755":{"entryPoint":null,"id":2755,"parameterSlots":0,"returnSlots":0},"@isContract_809":{"entryPoint":null,"id":809,"parameterSlots":1,"returnSlots":1},"@owner_55":{"entryPoint":null,"id":55,"parameterSlots":0,"returnSlots":1},"@recoverSigner_3016":{"entryPoint":1871,"id":3016,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_83":{"entryPoint":1756,"id":83,"parameterSlots":0,"returnSlots":0},"@setIntentxTrustedAddress_2827":{"entryPoint":1776,"id":2827,"parameterSlots":1,"returnSlots":0},"@splitSignature_3037":{"entryPoint":1999,"id":3037,"parameterSlots":1,"returnSlots":3},"@startTimestamp_2757":{"entryPoint":null,"id":2757,"parameterSlots":0,"returnSlots":0},"@totalReward_2759":{"entryPoint":null,"id":2759,"parameterSlots":0,"returnSlots":0},"@transferOwnership_106":{"entryPoint":2522,"id":106,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":3647,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":3359,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":3515,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":3586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ccbc8d110690c26996b747d54162e0eac850b68d67f8d93a1b7bbf0e40ee36c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7660e4d8f7088b646f31333b47775ecdcd2a14846d2d10410eea5c3e13e6f0ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_96d20a50da07d1e03574c2507d315d63204105ff475241c13dfdc5f7c5f326f3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ded270ad198ddeba624ddb04f6cd2c013f91ba70613b95f0f506a715249adc73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4c1dfc67b440e06228628f9ad2134d6fc08db9b55947d42c92af3c9618b045a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3764,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3745,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3698,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3141,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10077:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:12","statements":[{"nodeType":"YulAssignment","src":"73:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:12"},"nodeType":"YulFunctionCall","src":"82:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:12"}]},{"body":{"nodeType":"YulBlock","src":"188:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:12"},"nodeType":"YulFunctionCall","src":"190:12:12"},"nodeType":"YulExpressionStatement","src":"190:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:12"},"nodeType":"YulFunctionCall","src":"131:54:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:12"},"nodeType":"YulFunctionCall","src":"121:65:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:12"},"nodeType":"YulFunctionCall","src":"114:73:12"},"nodeType":"YulIf","src":"111:93:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:12","type":""}],"src":"14:196:12"},{"body":{"nodeType":"YulBlock","src":"247:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"264:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"267:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"257:6:12"},"nodeType":"YulFunctionCall","src":"257:88:12"},"nodeType":"YulExpressionStatement","src":"257:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"361:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"364:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"354:6:12"},"nodeType":"YulFunctionCall","src":"354:15:12"},"nodeType":"YulExpressionStatement","src":"354:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"385:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"388:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"378:6:12"},"nodeType":"YulFunctionCall","src":"378:15:12"},"nodeType":"YulExpressionStatement","src":"378:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"215:184:12"},{"body":{"nodeType":"YulBlock","src":"456:725:12","statements":[{"body":{"nodeType":"YulBlock","src":"505:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"514:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"517:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"507:6:12"},"nodeType":"YulFunctionCall","src":"507:12:12"},"nodeType":"YulExpressionStatement","src":"507:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"484:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"492:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:12"},"nodeType":"YulFunctionCall","src":"480:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"499:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"476:3:12"},"nodeType":"YulFunctionCall","src":"476:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"469:6:12"},"nodeType":"YulFunctionCall","src":"469:35:12"},"nodeType":"YulIf","src":"466:55:12"},{"nodeType":"YulVariableDeclaration","src":"530:30:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"553:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"540:12:12"},"nodeType":"YulFunctionCall","src":"540:20:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"534:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"569:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"579:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"573:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"620:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"622:16:12"},"nodeType":"YulFunctionCall","src":"622:18:12"},"nodeType":"YulExpressionStatement","src":"622:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"612:2:12"},{"name":"_2","nodeType":"YulIdentifier","src":"616:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"609:2:12"},"nodeType":"YulFunctionCall","src":"609:10:12"},"nodeType":"YulIf","src":"606:36:12"},{"nodeType":"YulVariableDeclaration","src":"651:76:12","value":{"kind":"number","nodeType":"YulLiteral","src":"661:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"655:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"736:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"756:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"750:5:12"},"nodeType":"YulFunctionCall","src":"750:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"740:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"768:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"790:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"814:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"818:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"810:3:12"},"nodeType":"YulFunctionCall","src":"810:13:12"},{"name":"_3","nodeType":"YulIdentifier","src":"825:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"806:3:12"},"nodeType":"YulFunctionCall","src":"806:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"830:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"802:3:12"},"nodeType":"YulFunctionCall","src":"802:31:12"},{"name":"_3","nodeType":"YulIdentifier","src":"835:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"798:3:12"},"nodeType":"YulFunctionCall","src":"798:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"786:3:12"},"nodeType":"YulFunctionCall","src":"786:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"772:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"898:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"900:16:12"},"nodeType":"YulFunctionCall","src":"900:18:12"},"nodeType":"YulExpressionStatement","src":"900:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"857:10:12"},{"name":"_2","nodeType":"YulIdentifier","src":"869:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"854:2:12"},"nodeType":"YulFunctionCall","src":"854:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"877:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"889:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"874:2:12"},"nodeType":"YulFunctionCall","src":"874:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"851:2:12"},"nodeType":"YulFunctionCall","src":"851:46:12"},"nodeType":"YulIf","src":"848:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"940:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"929:6:12"},"nodeType":"YulFunctionCall","src":"929:22:12"},"nodeType":"YulExpressionStatement","src":"929:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"967:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"975:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"960:6:12"},"nodeType":"YulFunctionCall","src":"960:18:12"},"nodeType":"YulExpressionStatement","src":"960:18:12"},{"body":{"nodeType":"YulBlock","src":"1026:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1035:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1038:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1028:6:12"},"nodeType":"YulFunctionCall","src":"1028:12:12"},"nodeType":"YulExpressionStatement","src":"1028:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1001:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1009:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:12"},"nodeType":"YulFunctionCall","src":"997:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"1014:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:12"},"nodeType":"YulFunctionCall","src":"993:26:12"},{"name":"end","nodeType":"YulIdentifier","src":"1021:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"990:2:12"},"nodeType":"YulFunctionCall","src":"990:35:12"},"nodeType":"YulIf","src":"987:55:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1068:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1076:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1064:3:12"},"nodeType":"YulFunctionCall","src":"1064:17:12"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1087:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1095:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1083:3:12"},"nodeType":"YulFunctionCall","src":"1083:17:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1102:2:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1051:12:12"},"nodeType":"YulFunctionCall","src":"1051:54:12"},"nodeType":"YulExpressionStatement","src":"1051:54:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1129:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1137:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1125:3:12"},"nodeType":"YulFunctionCall","src":"1125:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"1142:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:12"},"nodeType":"YulFunctionCall","src":"1121:26:12"},{"kind":"number","nodeType":"YulLiteral","src":"1149:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1114:6:12"},"nodeType":"YulFunctionCall","src":"1114:37:12"},"nodeType":"YulExpressionStatement","src":"1114:37:12"},{"nodeType":"YulAssignment","src":"1160:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1169:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1160:5:12"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"430:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"438:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"446:5:12","type":""}],"src":"404:777:12"},{"body":{"nodeType":"YulBlock","src":"1316:401:12","statements":[{"body":{"nodeType":"YulBlock","src":"1363:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1372:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1375:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1365:6:12"},"nodeType":"YulFunctionCall","src":"1365:12:12"},"nodeType":"YulExpressionStatement","src":"1365:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1337:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1346:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1333:3:12"},"nodeType":"YulFunctionCall","src":"1333:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1358:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1329:3:12"},"nodeType":"YulFunctionCall","src":"1329:33:12"},"nodeType":"YulIf","src":"1326:53:12"},{"nodeType":"YulAssignment","src":"1388:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1398:18:12"},"nodeType":"YulFunctionCall","src":"1398:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1388:6:12"}]},{"nodeType":"YulAssignment","src":"1436:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1463:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1474:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1459:3:12"},"nodeType":"YulFunctionCall","src":"1459:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1446:12:12"},"nodeType":"YulFunctionCall","src":"1446:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1436:6:12"}]},{"nodeType":"YulAssignment","src":"1487:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1514:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1525:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1510:3:12"},"nodeType":"YulFunctionCall","src":"1510:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1497:12:12"},"nodeType":"YulFunctionCall","src":"1497:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1487:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1538:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1569:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1580:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1565:3:12"},"nodeType":"YulFunctionCall","src":"1565:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1552:12:12"},"nodeType":"YulFunctionCall","src":"1552:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1542:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1627:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1636:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1639:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1629:6:12"},"nodeType":"YulFunctionCall","src":"1629:12:12"},"nodeType":"YulExpressionStatement","src":"1629:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1599:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1607:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1596:2:12"},"nodeType":"YulFunctionCall","src":"1596:30:12"},"nodeType":"YulIf","src":"1593:50:12"},{"nodeType":"YulAssignment","src":"1652:59:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"1694:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:12"},"nodeType":"YulFunctionCall","src":"1679:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1703:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"1662:16:12"},"nodeType":"YulFunctionCall","src":"1662:49:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1652:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1258:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1269:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1281:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1289:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1297:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1305:6:12","type":""}],"src":"1186:531:12"},{"body":{"nodeType":"YulBlock","src":"1792:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1838:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1847:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1850:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1840:6:12"},"nodeType":"YulFunctionCall","src":"1840:12:12"},"nodeType":"YulExpressionStatement","src":"1840:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1813:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1809:3:12"},"nodeType":"YulFunctionCall","src":"1809:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1805:3:12"},"nodeType":"YulFunctionCall","src":"1805:32:12"},"nodeType":"YulIf","src":"1802:52:12"},{"nodeType":"YulAssignment","src":"1863:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1886:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1873:12:12"},"nodeType":"YulFunctionCall","src":"1873:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1863:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1758:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1769:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1781:6:12","type":""}],"src":"1722:180:12"},{"body":{"nodeType":"YulBlock","src":"2008:76:12","statements":[{"nodeType":"YulAssignment","src":"2018:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2030:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2041:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:12"},"nodeType":"YulFunctionCall","src":"2026:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2018:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2060:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"2071:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2053:6:12"},"nodeType":"YulFunctionCall","src":"2053:25:12"},"nodeType":"YulExpressionStatement","src":"2053:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1977:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1988:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1999:4:12","type":""}],"src":"1907:177:12"},{"body":{"nodeType":"YulBlock","src":"2190:125:12","statements":[{"nodeType":"YulAssignment","src":"2200:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2212:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2223:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2208:3:12"},"nodeType":"YulFunctionCall","src":"2208:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2200:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2242:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2257:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2265:42:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2253:3:12"},"nodeType":"YulFunctionCall","src":"2253:55:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2235:6:12"},"nodeType":"YulFunctionCall","src":"2235:74:12"},"nodeType":"YulExpressionStatement","src":"2235:74:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2159:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2170:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2181:4:12","type":""}],"src":"2089:226:12"},{"body":{"nodeType":"YulBlock","src":"2390:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"2436:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2445:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2448:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2438:6:12"},"nodeType":"YulFunctionCall","src":"2438:12:12"},"nodeType":"YulExpressionStatement","src":"2438:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2411:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2420:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2407:3:12"},"nodeType":"YulFunctionCall","src":"2407:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2432:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2403:3:12"},"nodeType":"YulFunctionCall","src":"2403:32:12"},"nodeType":"YulIf","src":"2400:52:12"},{"nodeType":"YulAssignment","src":"2461:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2471:18:12"},"nodeType":"YulFunctionCall","src":"2471:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2461:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2356:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2367:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2379:6:12","type":""}],"src":"2320:186:12"},{"body":{"nodeType":"YulBlock","src":"2607:292:12","statements":[{"body":{"nodeType":"YulBlock","src":"2653:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2662:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2665:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2655:6:12"},"nodeType":"YulFunctionCall","src":"2655:12:12"},"nodeType":"YulExpressionStatement","src":"2655:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2628:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2637:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2624:3:12"},"nodeType":"YulFunctionCall","src":"2624:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2649:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2620:3:12"},"nodeType":"YulFunctionCall","src":"2620:32:12"},"nodeType":"YulIf","src":"2617:52:12"},{"nodeType":"YulAssignment","src":"2678:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2701:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2688:12:12"},"nodeType":"YulFunctionCall","src":"2688:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2678:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"2720:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2751:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2762:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2747:3:12"},"nodeType":"YulFunctionCall","src":"2747:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2734:12:12"},"nodeType":"YulFunctionCall","src":"2734:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2724:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2809:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2818:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2821:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2811:6:12"},"nodeType":"YulFunctionCall","src":"2811:12:12"},"nodeType":"YulExpressionStatement","src":"2811:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2781:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2789:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2778:2:12"},"nodeType":"YulFunctionCall","src":"2778:30:12"},"nodeType":"YulIf","src":"2775:50:12"},{"nodeType":"YulAssignment","src":"2834:59:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2865:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"2876:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2861:3:12"},"nodeType":"YulFunctionCall","src":"2861:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2885:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"2844:16:12"},"nodeType":"YulFunctionCall","src":"2844:49:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2834:6:12"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2565:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2576:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2588:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2596:6:12","type":""}],"src":"2511:388:12"},{"body":{"nodeType":"YulBlock","src":"2983:241:12","statements":[{"body":{"nodeType":"YulBlock","src":"3029:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3038:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3041:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3031:6:12"},"nodeType":"YulFunctionCall","src":"3031:12:12"},"nodeType":"YulExpressionStatement","src":"3031:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3004:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3013:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3000:3:12"},"nodeType":"YulFunctionCall","src":"3000:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3025:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2996:3:12"},"nodeType":"YulFunctionCall","src":"2996:32:12"},"nodeType":"YulIf","src":"2993:52:12"},{"nodeType":"YulVariableDeclaration","src":"3054:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3081:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3068:12:12"},"nodeType":"YulFunctionCall","src":"3068:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3058:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3134:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3143:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3146:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3136:6:12"},"nodeType":"YulFunctionCall","src":"3136:12:12"},"nodeType":"YulExpressionStatement","src":"3136:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3106:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3114:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3103:2:12"},"nodeType":"YulFunctionCall","src":"3103:30:12"},"nodeType":"YulIf","src":"3100:50:12"},{"nodeType":"YulAssignment","src":"3159:59:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3190:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"3201:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3186:3:12"},"nodeType":"YulFunctionCall","src":"3186:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3210:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3169:16:12"},"nodeType":"YulFunctionCall","src":"3169:49:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3159:6:12"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2949:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2960:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2972:6:12","type":""}],"src":"2904:320:12"},{"body":{"nodeType":"YulBlock","src":"3382:173:12","statements":[{"nodeType":"YulAssignment","src":"3392:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3404:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3415:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3400:3:12"},"nodeType":"YulFunctionCall","src":"3400:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3392:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3434:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"3445:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3427:6:12"},"nodeType":"YulFunctionCall","src":"3427:25:12"},"nodeType":"YulExpressionStatement","src":"3427:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3472:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3483:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3468:3:12"},"nodeType":"YulFunctionCall","src":"3468:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"3488:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3461:6:12"},"nodeType":"YulFunctionCall","src":"3461:34:12"},"nodeType":"YulExpressionStatement","src":"3461:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3515:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3526:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3511:3:12"},"nodeType":"YulFunctionCall","src":"3511:18:12"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3535:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3543:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3531:3:12"},"nodeType":"YulFunctionCall","src":"3531:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3504:6:12"},"nodeType":"YulFunctionCall","src":"3504:45:12"},"nodeType":"YulExpressionStatement","src":"3504:45:12"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3335:9:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3346:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3354:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3362:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3373:4:12","type":""}],"src":"3229:326:12"},{"body":{"nodeType":"YulBlock","src":"3664:218:12","statements":[{"body":{"nodeType":"YulBlock","src":"3710:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3719:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3722:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3712:6:12"},"nodeType":"YulFunctionCall","src":"3712:12:12"},"nodeType":"YulExpressionStatement","src":"3712:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3685:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"3694:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3681:3:12"},"nodeType":"YulFunctionCall","src":"3681:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"3706:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3677:3:12"},"nodeType":"YulFunctionCall","src":"3677:32:12"},"nodeType":"YulIf","src":"3674:52:12"},{"nodeType":"YulAssignment","src":"3735:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3764:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3745:18:12"},"nodeType":"YulFunctionCall","src":"3745:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3735:6:12"}]},{"nodeType":"YulAssignment","src":"3783:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3810:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3821:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3806:3:12"},"nodeType":"YulFunctionCall","src":"3806:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3793:12:12"},"nodeType":"YulFunctionCall","src":"3793:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3783:6:12"}]},{"nodeType":"YulAssignment","src":"3834:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3872:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:12"},"nodeType":"YulFunctionCall","src":"3857:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3844:12:12"},"nodeType":"YulFunctionCall","src":"3844:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3834:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3614:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3625:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3637:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3645:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3653:6:12","type":""}],"src":"3560:322:12"},{"body":{"nodeType":"YulBlock","src":"3988:76:12","statements":[{"nodeType":"YulAssignment","src":"3998:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4010:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4021:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4006:3:12"},"nodeType":"YulFunctionCall","src":"4006:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3998:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"4051:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4033:6:12"},"nodeType":"YulFunctionCall","src":"4033:25:12"},"nodeType":"YulExpressionStatement","src":"4033:25:12"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3957:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3968:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3979:4:12","type":""}],"src":"3887:177:12"},{"body":{"nodeType":"YulBlock","src":"4139:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"4185:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4194:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4197:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4187:6:12"},"nodeType":"YulFunctionCall","src":"4187:12:12"},"nodeType":"YulExpressionStatement","src":"4187:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4160:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4169:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4156:3:12"},"nodeType":"YulFunctionCall","src":"4156:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4181:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4152:3:12"},"nodeType":"YulFunctionCall","src":"4152:32:12"},"nodeType":"YulIf","src":"4149:52:12"},{"nodeType":"YulAssignment","src":"4210:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4233:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4220:12:12"},"nodeType":"YulFunctionCall","src":"4220:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4210:6:12"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4105:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4116:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4128:6:12","type":""}],"src":"4069:180:12"},{"body":{"nodeType":"YulBlock","src":"4428:161:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4445:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4456:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4438:6:12"},"nodeType":"YulFunctionCall","src":"4438:21:12"},"nodeType":"YulExpressionStatement","src":"4438:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4479:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4490:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4475:3:12"},"nodeType":"YulFunctionCall","src":"4475:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4495:2:12","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4468:6:12"},"nodeType":"YulFunctionCall","src":"4468:30:12"},"nodeType":"YulExpressionStatement","src":"4468:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4518:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4529:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4514:3:12"},"nodeType":"YulFunctionCall","src":"4514:18:12"},{"hexValue":"4e4f542053544152544544","kind":"string","nodeType":"YulLiteral","src":"4534:13:12","type":"","value":"NOT STARTED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4507:6:12"},"nodeType":"YulFunctionCall","src":"4507:41:12"},"nodeType":"YulExpressionStatement","src":"4507:41:12"},{"nodeType":"YulAssignment","src":"4557:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4569:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4580:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:12"},"nodeType":"YulFunctionCall","src":"4565:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4557:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_ded270ad198ddeba624ddb04f6cd2c013f91ba70613b95f0f506a715249adc73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4405:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4419:4:12","type":""}],"src":"4254:335:12"},{"body":{"nodeType":"YulBlock","src":"4768:164:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4785:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4796:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4778:6:12"},"nodeType":"YulFunctionCall","src":"4778:21:12"},"nodeType":"YulExpressionStatement","src":"4778:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4819:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4830:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:12"},"nodeType":"YulFunctionCall","src":"4815:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"4835:2:12","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4808:6:12"},"nodeType":"YulFunctionCall","src":"4808:30:12"},"nodeType":"YulExpressionStatement","src":"4808:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4858:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4869:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4854:3:12"},"nodeType":"YulFunctionCall","src":"4854:18:12"},{"hexValue":"4e6f7420796f757220636c61696d","kind":"string","nodeType":"YulLiteral","src":"4874:16:12","type":"","value":"Not your claim"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4847:6:12"},"nodeType":"YulFunctionCall","src":"4847:44:12"},"nodeType":"YulExpressionStatement","src":"4847:44:12"},{"nodeType":"YulAssignment","src":"4900:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4912:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4923:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4908:3:12"},"nodeType":"YulFunctionCall","src":"4908:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4900:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_7660e4d8f7088b646f31333b47775ecdcd2a14846d2d10410eea5c3e13e6f0ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4745:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4759:4:12","type":""}],"src":"4594:338:12"},{"body":{"nodeType":"YulBlock","src":"5111:226:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5128:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5139:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5121:6:12"},"nodeType":"YulFunctionCall","src":"5121:21:12"},"nodeType":"YulExpressionStatement","src":"5121:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5162:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5173:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5158:3:12"},"nodeType":"YulFunctionCall","src":"5158:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5178:2:12","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5151:6:12"},"nodeType":"YulFunctionCall","src":"5151:30:12"},"nodeType":"YulExpressionStatement","src":"5151:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5201:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5212:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5197:3:12"},"nodeType":"YulFunctionCall","src":"5197:18:12"},{"hexValue":"496e74656e745820547275737465642041646472657373206e6f742073657420","kind":"string","nodeType":"YulLiteral","src":"5217:34:12","type":"","value":"IntentX Trusted Address not set "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5190:6:12"},"nodeType":"YulFunctionCall","src":"5190:62:12"},"nodeType":"YulExpressionStatement","src":"5190:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5272:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5283:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5268:3:12"},"nodeType":"YulFunctionCall","src":"5268:18:12"},{"hexValue":"7965742e","kind":"string","nodeType":"YulLiteral","src":"5288:6:12","type":"","value":"yet."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5261:6:12"},"nodeType":"YulFunctionCall","src":"5261:34:12"},"nodeType":"YulExpressionStatement","src":"5261:34:12"},{"nodeType":"YulAssignment","src":"5304:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5316:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5327:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5312:3:12"},"nodeType":"YulFunctionCall","src":"5312:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5304:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_96d20a50da07d1e03574c2507d315d63204105ff475241c13dfdc5f7c5f326f3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5088:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5102:4:12","type":""}],"src":"4937:400:12"},{"body":{"nodeType":"YulBlock","src":"5516:169:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5533:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5544:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5526:6:12"},"nodeType":"YulFunctionCall","src":"5526:21:12"},"nodeType":"YulExpressionStatement","src":"5526:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5567:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5578:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5563:3:12"},"nodeType":"YulFunctionCall","src":"5563:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"5583:2:12","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5556:6:12"},"nodeType":"YulFunctionCall","src":"5556:30:12"},"nodeType":"YulExpressionStatement","src":"5556:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5606:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5617:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5602:3:12"},"nodeType":"YulFunctionCall","src":"5602:18:12"},{"hexValue":"5369676e6572203d2120547275737465642e20","kind":"string","nodeType":"YulLiteral","src":"5622:21:12","type":"","value":"Signer =! Trusted. "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5595:6:12"},"nodeType":"YulFunctionCall","src":"5595:49:12"},"nodeType":"YulExpressionStatement","src":"5595:49:12"},{"nodeType":"YulAssignment","src":"5653:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5676:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:12"},"nodeType":"YulFunctionCall","src":"5661:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5653:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ccbc8d110690c26996b747d54162e0eac850b68d67f8d93a1b7bbf0e40ee36c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5493:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5507:4:12","type":""}],"src":"5342:343:12"},{"body":{"nodeType":"YulBlock","src":"5722:152:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5739:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5742:77:12","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5732:6:12"},"nodeType":"YulFunctionCall","src":"5732:88:12"},"nodeType":"YulExpressionStatement","src":"5732:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5836:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5839:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5829:6:12"},"nodeType":"YulFunctionCall","src":"5829:15:12"},"nodeType":"YulExpressionStatement","src":"5829:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5860:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5863:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5853:6:12"},"nodeType":"YulFunctionCall","src":"5853:15:12"},"nodeType":"YulExpressionStatement","src":"5853:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5690:184:12"},{"body":{"nodeType":"YulBlock","src":"5928:79:12","statements":[{"nodeType":"YulAssignment","src":"5938:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5950:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"5953:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5946:3:12"},"nodeType":"YulFunctionCall","src":"5946:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5938:4:12"}]},{"body":{"nodeType":"YulBlock","src":"5979:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5981:16:12"},"nodeType":"YulFunctionCall","src":"5981:18:12"},"nodeType":"YulExpressionStatement","src":"5981:18:12"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5970:4:12"},{"name":"x","nodeType":"YulIdentifier","src":"5976:1:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5967:2:12"},"nodeType":"YulFunctionCall","src":"5967:11:12"},"nodeType":"YulIf","src":"5964:37:12"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5910:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"5913:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5919:4:12","type":""}],"src":"5879:128:12"},{"body":{"nodeType":"YulBlock","src":"6141:119:12","statements":[{"nodeType":"YulAssignment","src":"6151:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6174:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6159:3:12"},"nodeType":"YulFunctionCall","src":"6159:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6151:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6193:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"6204:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6186:6:12"},"nodeType":"YulFunctionCall","src":"6186:25:12"},"nodeType":"YulExpressionStatement","src":"6186:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6231:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6242:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6227:3:12"},"nodeType":"YulFunctionCall","src":"6227:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"6247:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6220:6:12"},"nodeType":"YulFunctionCall","src":"6220:34:12"},"nodeType":"YulExpressionStatement","src":"6220:34:12"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6102:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6113:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6121:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6132:4:12","type":""}],"src":"6012:248:12"},{"body":{"nodeType":"YulBlock","src":"6439:172:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6456:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6467:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6449:6:12"},"nodeType":"YulFunctionCall","src":"6449:21:12"},"nodeType":"YulExpressionStatement","src":"6449:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6490:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6501:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6486:3:12"},"nodeType":"YulFunctionCall","src":"6486:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"6506:2:12","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6479:6:12"},"nodeType":"YulFunctionCall","src":"6479:30:12"},"nodeType":"YulExpressionStatement","src":"6479:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6529:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6540:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6525:3:12"},"nodeType":"YulFunctionCall","src":"6525:18:12"},{"hexValue":"4e6f7420656e6f75676820616d6f756e742073656e74","kind":"string","nodeType":"YulLiteral","src":"6545:24:12","type":"","value":"Not enough amount sent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6518:6:12"},"nodeType":"YulFunctionCall","src":"6518:52:12"},"nodeType":"YulExpressionStatement","src":"6518:52:12"},{"nodeType":"YulAssignment","src":"6579:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6591:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6602:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6587:3:12"},"nodeType":"YulFunctionCall","src":"6587:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6579:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4c1dfc67b440e06228628f9ad2134d6fc08db9b55947d42c92af3c9618b045a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6416:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6430:4:12","type":""}],"src":"6265:346:12"},{"body":{"nodeType":"YulBlock","src":"6664:77:12","statements":[{"nodeType":"YulAssignment","src":"6674:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6685:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6688:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6681:3:12"},"nodeType":"YulFunctionCall","src":"6681:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6674:3:12"}]},{"body":{"nodeType":"YulBlock","src":"6713:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6715:16:12"},"nodeType":"YulFunctionCall","src":"6715:18:12"},"nodeType":"YulExpressionStatement","src":"6715:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6705:1:12"},{"name":"sum","nodeType":"YulIdentifier","src":"6708:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6702:2:12"},"nodeType":"YulFunctionCall","src":"6702:10:12"},"nodeType":"YulIf","src":"6699:36:12"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6647:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"6650:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6656:3:12","type":""}],"src":"6616:125:12"},{"body":{"nodeType":"YulBlock","src":"6927:217:12","statements":[{"nodeType":"YulAssignment","src":"6937:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6949:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6960:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6945:3:12"},"nodeType":"YulFunctionCall","src":"6945:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6937:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6980:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"6991:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6973:6:12"},"nodeType":"YulFunctionCall","src":"6973:25:12"},"nodeType":"YulExpressionStatement","src":"6973:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7018:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7029:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7014:3:12"},"nodeType":"YulFunctionCall","src":"7014:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7038:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7046:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7034:3:12"},"nodeType":"YulFunctionCall","src":"7034:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7007:6:12"},"nodeType":"YulFunctionCall","src":"7007:45:12"},"nodeType":"YulExpressionStatement","src":"7007:45:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7072:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7083:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7068:3:12"},"nodeType":"YulFunctionCall","src":"7068:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"7088:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7061:6:12"},"nodeType":"YulFunctionCall","src":"7061:34:12"},"nodeType":"YulExpressionStatement","src":"7061:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7115:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7126:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7111:3:12"},"nodeType":"YulFunctionCall","src":"7111:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"7131:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7104:6:12"},"nodeType":"YulFunctionCall","src":"7104:34:12"},"nodeType":"YulExpressionStatement","src":"7104:34:12"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6872:9:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6883:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6891:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6899:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6907:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6918:4:12","type":""}],"src":"6746:398:12"},{"body":{"nodeType":"YulBlock","src":"7323:174:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7340:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7351:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7333:6:12"},"nodeType":"YulFunctionCall","src":"7333:21:12"},"nodeType":"YulExpressionStatement","src":"7333:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7374:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7385:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7370:3:12"},"nodeType":"YulFunctionCall","src":"7370:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:12","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7363:6:12"},"nodeType":"YulFunctionCall","src":"7363:30:12"},"nodeType":"YulExpressionStatement","src":"7363:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7413:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7424:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7409:3:12"},"nodeType":"YulFunctionCall","src":"7409:18:12"},{"hexValue":"696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"7429:26:12","type":"","value":"invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7402:6:12"},"nodeType":"YulFunctionCall","src":"7402:54:12"},"nodeType":"YulExpressionStatement","src":"7402:54:12"},{"nodeType":"YulAssignment","src":"7465:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7477:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7488:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:12"},"nodeType":"YulFunctionCall","src":"7473:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7465:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7300:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7314:4:12","type":""}],"src":"7149:348:12"},{"body":{"nodeType":"YulBlock","src":"7676:236:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7704:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7686:6:12"},"nodeType":"YulFunctionCall","src":"7686:21:12"},"nodeType":"YulExpressionStatement","src":"7686:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7727:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7738:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7723:3:12"},"nodeType":"YulFunctionCall","src":"7723:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7743:2:12","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7716:6:12"},"nodeType":"YulFunctionCall","src":"7716:30:12"},"nodeType":"YulExpressionStatement","src":"7716:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7766:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7777:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7762:3:12"},"nodeType":"YulFunctionCall","src":"7762:18:12"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"7782:34:12","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7755:6:12"},"nodeType":"YulFunctionCall","src":"7755:62:12"},"nodeType":"YulExpressionStatement","src":"7755:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7837:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7848:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:12"},"nodeType":"YulFunctionCall","src":"7833:18:12"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"7853:16:12","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7826:6:12"},"nodeType":"YulFunctionCall","src":"7826:44:12"},"nodeType":"YulExpressionStatement","src":"7826:44:12"},{"nodeType":"YulAssignment","src":"7879:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7891:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7902:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7887:3:12"},"nodeType":"YulFunctionCall","src":"7887:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7879:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7653:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7667:4:12","type":""}],"src":"7502:410:12"},{"body":{"nodeType":"YulBlock","src":"8024:87:12","statements":[{"nodeType":"YulAssignment","src":"8034:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8046:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8057:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8042:3:12"},"nodeType":"YulFunctionCall","src":"8042:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8034:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8076:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8091:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8099:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8087:3:12"},"nodeType":"YulFunctionCall","src":"8087:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8069:6:12"},"nodeType":"YulFunctionCall","src":"8069:36:12"},"nodeType":"YulExpressionStatement","src":"8069:36:12"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7993:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8004:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8015:4:12","type":""}],"src":"7917:194:12"},{"body":{"nodeType":"YulBlock","src":"8291:219:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8308:3:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8321:2:12","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"8325:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8317:3:12"},"nodeType":"YulFunctionCall","src":"8317:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"8334:66:12","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8313:3:12"},"nodeType":"YulFunctionCall","src":"8313:88:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8301:6:12"},"nodeType":"YulFunctionCall","src":"8301:101:12"},"nodeType":"YulExpressionStatement","src":"8301:101:12"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8422:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8427:2:12","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8418:3:12"},"nodeType":"YulFunctionCall","src":"8418:12:12"},{"name":"value1","nodeType":"YulIdentifier","src":"8432:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8411:6:12"},"nodeType":"YulFunctionCall","src":"8411:28:12"},"nodeType":"YulExpressionStatement","src":"8411:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8459:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8464:2:12","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8455:3:12"},"nodeType":"YulFunctionCall","src":"8455:12:12"},{"name":"value2","nodeType":"YulIdentifier","src":"8469:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8448:6:12"},"nodeType":"YulFunctionCall","src":"8448:28:12"},"nodeType":"YulExpressionStatement","src":"8448:28:12"},{"nodeType":"YulAssignment","src":"8485:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8496:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8501:2:12","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8492:3:12"},"nodeType":"YulFunctionCall","src":"8492:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8485:3:12"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8251:3:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8256:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8264:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8272:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8283:3:12","type":""}],"src":"8116:394:12"},{"body":{"nodeType":"YulBlock","src":"8689:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8706:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8717:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8699:6:12"},"nodeType":"YulFunctionCall","src":"8699:21:12"},"nodeType":"YulExpressionStatement","src":"8699:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8740:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8751:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8736:3:12"},"nodeType":"YulFunctionCall","src":"8736:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8756:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8729:6:12"},"nodeType":"YulFunctionCall","src":"8729:30:12"},"nodeType":"YulExpressionStatement","src":"8729:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8779:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8775:3:12"},"nodeType":"YulFunctionCall","src":"8775:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8795:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8768:6:12"},"nodeType":"YulFunctionCall","src":"8768:62:12"},"nodeType":"YulExpressionStatement","src":"8768:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8850:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8861:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8846:3:12"},"nodeType":"YulFunctionCall","src":"8846:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8866:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8839:6:12"},"nodeType":"YulFunctionCall","src":"8839:36:12"},"nodeType":"YulExpressionStatement","src":"8839:36:12"},{"nodeType":"YulAssignment","src":"8884:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8896:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8907:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8892:3:12"},"nodeType":"YulFunctionCall","src":"8892:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8884:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8666:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8680:4:12","type":""}],"src":"8515:402:12"},{"body":{"nodeType":"YulBlock","src":"9142:160:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9159:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9164:66:12","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9152:6:12"},"nodeType":"YulFunctionCall","src":"9152:79:12"},"nodeType":"YulExpressionStatement","src":"9152:79:12"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9251:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9256:2:12","type":"","value":"28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9247:3:12"},"nodeType":"YulFunctionCall","src":"9247:12:12"},{"name":"value0","nodeType":"YulIdentifier","src":"9261:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9240:6:12"},"nodeType":"YulFunctionCall","src":"9240:28:12"},"nodeType":"YulExpressionStatement","src":"9240:28:12"},{"nodeType":"YulAssignment","src":"9277:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9288:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"9293:2:12","type":"","value":"60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9284:3:12"},"nodeType":"YulFunctionCall","src":"9284:12:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9277:3:12"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9118:3:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9123:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9134:3:12","type":""}],"src":"8922:380:12"},{"body":{"nodeType":"YulBlock","src":"9481:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9498:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9509:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9491:6:12"},"nodeType":"YulFunctionCall","src":"9491:21:12"},"nodeType":"YulExpressionStatement","src":"9491:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9532:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9543:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9528:3:12"},"nodeType":"YulFunctionCall","src":"9528:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9548:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9521:6:12"},"nodeType":"YulFunctionCall","src":"9521:30:12"},"nodeType":"YulExpressionStatement","src":"9521:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9571:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9582:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9567:3:12"},"nodeType":"YulFunctionCall","src":"9567:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"9587:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9560:6:12"},"nodeType":"YulFunctionCall","src":"9560:62:12"},"nodeType":"YulExpressionStatement","src":"9560:62:12"},{"nodeType":"YulAssignment","src":"9631:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9654:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:12"},"nodeType":"YulFunctionCall","src":"9639:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9631:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9458:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9472:4:12","type":""}],"src":"9307:356:12"},{"body":{"nodeType":"YulBlock","src":"9842:233:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9859:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9870:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9852:6:12"},"nodeType":"YulFunctionCall","src":"9852:21:12"},"nodeType":"YulExpressionStatement","src":"9852:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9893:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9904:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9889:3:12"},"nodeType":"YulFunctionCall","src":"9889:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9909:2:12","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9882:6:12"},"nodeType":"YulFunctionCall","src":"9882:30:12"},"nodeType":"YulExpressionStatement","src":"9882:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9932:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9943:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9928:3:12"},"nodeType":"YulFunctionCall","src":"9928:18:12"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"9948:34:12","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9921:6:12"},"nodeType":"YulFunctionCall","src":"9921:62:12"},"nodeType":"YulExpressionStatement","src":"9921:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10003:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10014:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9999:3:12"},"nodeType":"YulFunctionCall","src":"9999:18:12"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"10019:13:12","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9992:6:12"},"nodeType":"YulFunctionCall","src":"9992:41:12"},"nodeType":"YulExpressionStatement","src":"9992:41:12"},{"nodeType":"YulAssignment","src":"10042:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10054:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10065:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10050:3:12"},"nodeType":"YulFunctionCall","src":"10050:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10042:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9819:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9833:4:12","type":""}],"src":"9668:407:12"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ded270ad198ddeba624ddb04f6cd2c013f91ba70613b95f0f506a715249adc73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"NOT STARTED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7660e4d8f7088b646f31333b47775ecdcd2a14846d2d10410eea5c3e13e6f0ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not your claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_96d20a50da07d1e03574c2507d315d63204105ff475241c13dfdc5f7c5f326f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"IntentX Trusted Address not set \")\n        mstore(add(headStart, 96), \"yet.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3ccbc8d110690c26996b747d54162e0eac850b68d67f8d93a1b7bbf0e40ee36c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Signer =! Trusted. \")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e4c1dfc67b440e06228628f9ad2134d6fc08db9b55947d42c92af3c9618b045a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not enough amount sent\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100e85760003560e01c8063a7bb58031161008a578063d7a105ec11610059578063d7a105ec146102c7578063e6fd48bc146102e7578063f2fde38b146102fd578063fa5408011461031d57600080fd5b8063a7bb5803146101d2578063c4d66de814610210578063c884ef8314610230578063d2b0737b1461025d57600080fd5b8063750142e6116100c6578063750142e6146101375780638da5cb5b1461016057806396b18c121461019257806397aba7f9146101b257600080fd5b80632ada8a32146100ed5780633fda53891461010f578063715018a614610122575b600080fd5b3480156100f957600080fd5b5061010d610108366004610d1f565b61038b565b005b61010d61011d366004610d80565b61063a565b34801561012e57600080fd5b5061010d6106dc565b34801561014357600080fd5b5061014d60675481565b6040519081526020015b60405180910390f35b34801561016c57600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610157565b34801561019e57600080fd5b5061010d6101ad366004610d99565b6106f0565b3480156101be57600080fd5b5061017a6101cd366004610dbb565b61074f565b3480156101de57600080fd5b506101f26101ed366004610e02565b6107cf565b60408051938452602084019290925260ff1690820152606001610157565b34801561021c57600080fd5b5061010d61022b366004610d99565b610843565b34801561023c57600080fd5b5061014d61024b366004610d99565b60686020526000908152604090205481565b34801561026957600080fd5b5061014d610278366004610e3f565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052605481018290526000906074016040516020818303038152906040528051906020012090509392505050565b3480156102d357600080fd5b5060655461017a906001600160a01b031681565b3480156102f357600080fd5b5061014d60665481565b34801561030957600080fd5b5061010d610318366004610d99565b6109da565b34801561032957600080fd5b5061014d610338366004610d80565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6066544210156103e25760405162461bcd60e51b815260206004820152600b60248201527f4e4f54205354415254454400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b336001600160a01b0385161461043a5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420796f757220636c61696d00000000000000000000000000000000000060448201526064016103d9565b6065546001600160a01b03166104b75760405162461bcd60e51b8152602060048201526024808201527f496e74656e745820547275737465642041646472657373206e6f74207365742060448201527f7965742e0000000000000000000000000000000000000000000000000000000060648201526084016103d9565b336000908152606860205260409020548311156106345760408051606086901b6bffffffffffffffffffffffff1916602080830191909152603482018690526054808301869052835180840390910181526074830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a333200000000609484015260b08084018290528451808503909101815260d090930190935281519101206065546001600160a01b031661056f828561074f565b6001600160a01b0316146105c55760405162461bcd60e51b815260206004820152601360248201527f5369676e6572203d2120547275737465642e200000000000000000000000000060448201526064016103d9565b336000908152606860205260408120546105df9087610ea1565b336000818152606860209081526040918290208a9055815142815290810184905292935090917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a25050505b50505050565b3481146106895760405162461bcd60e51b815260206004820152601660248201527f4e6f7420656e6f75676820616d6f756e742073656e740000000000000000000060448201526064016103d9565b806067600082825461069b9190610eb4565b909155505060408051428152602081018390527f45cad8c10023de80f4c0672ff6c283b671e11aa93c92b9380cdf060d2790da52910160405180910390a150565b6106e4610a6a565b6106ee6000610ac4565b565b6106f8610a6a565b6065805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fe26c879d728ec1a6c6f55c2809dd8c7f9d67beca07940f3020aca5d96e0073db90600090a250565b60008060008061075e856107cf565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa1580156107b9573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600080600083516041146108255760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016103d9565b50505060208101516040820151606090920151909260009190911a90565b600054610100900460ff16158080156108635750600054600160ff909116105b8061087d5750303b15801561087d575060005460ff166001145b6108ef5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103d9565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610930576000805461ff0019166101001790555b610938610b23565b6065805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155426066556040517fe26c879d728ec1a6c6f55c2809dd8c7f9d67beca07940f3020aca5d96e0073db90600090a280156109d6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6109e2610a6a565b6001600160a01b038116610a5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d9565b610a6781610ac4565b50565b6033546001600160a01b031633146106ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d9565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ba05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d9565b6106ee600054610100900460ff16610c205760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d9565b6106ee33610ac4565b80356001600160a01b0381168114610c4057600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610c8557600080fd5b813567ffffffffffffffff80821115610ca057610ca0610c45565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610ce657610ce6610c45565b81604052838152866020858801011115610cff57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610d3557600080fd5b610d3e85610c29565b93506020850135925060408501359150606085013567ffffffffffffffff811115610d6857600080fd5b610d7487828801610c74565b91505092959194509250565b600060208284031215610d9257600080fd5b5035919050565b600060208284031215610dab57600080fd5b610db482610c29565b9392505050565b60008060408385031215610dce57600080fd5b82359150602083013567ffffffffffffffff811115610dec57600080fd5b610df885828601610c74565b9150509250929050565b600060208284031215610e1457600080fd5b813567ffffffffffffffff811115610e2b57600080fd5b610e3784828501610c74565b949350505050565b600080600060608486031215610e5457600080fd5b610e5d84610c29565b95602085013595506040909401359392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156107c9576107c9610e72565b808201808211156107c9576107c9610e7256fea264697066735822122002daea9ef87b0769ba65182ea0ff273a0dac8002be74b02f38834c74b198a63f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD7A105EC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD7A105EC EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xD2B0737B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x750142E6 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x96B18C12 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2ADA8A32 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x3FDA5389 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x6DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x66 SLOAD TIMESTAMP LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F542053544152544544000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420796F757220636C61696D000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x496E74656E745820547275737465642041646472657373206E6F742073657420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7965742E00000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP7 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x54 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x74 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x94 DUP5 ADD MSTORE PUSH1 0xB0 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xD0 SWAP1 SWAP4 ADD SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x56F DUP3 DUP6 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572203D2120547275737465642E2000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5DF SWAP1 DUP8 PUSH2 0xEA1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE DUP2 MLOAD TIMESTAMP DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820616D6F756E742073656E7400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST DUP1 PUSH1 0x67 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x45CAD8C10023DE80F4C0672FF6C283B671E11AA93C92B9380CDF060D2790DA52 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6E4 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x6EE PUSH1 0x0 PUSH2 0xAC4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE26C879D728EC1A6C6F55C2809DD8C7F9D67BECA07940F3020ACA5D96E0073DB SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x75E DUP6 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x863 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x87D JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x938 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x66 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE26C879D728EC1A6C6F55C2809DD8C7F9D67BECA07940F3020ACA5D96E0073DB SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0xA67 DUP2 PUSH2 0xAC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x6EE PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x6EE CALLER PUSH2 0xAC4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCA0 JUMPI PUSH2 0xCA0 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE6 PUSH2 0xC45 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3E DUP6 PUSH2 0xC29 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD74 DUP8 DUP3 DUP9 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP3 PUSH2 0xC29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF8 DUP6 DUP3 DUP7 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE37 DUP5 DUP3 DUP6 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5D DUP5 PUSH2 0xC29 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0xE72 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0xE72 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDA 0xEA SWAP15 0xF8 PUSH28 0x769BA65182EA0FF273A0DAC8002BE74B02F38834C74B198A63F6473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"374:3816:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:979;;;;;;;;;;-1:-1:-1;2043:979:11;;;;;:::i;:::-;;:::i;:::-;;1838:199;;;;;;:::i;:::-;;:::i;2085:101:0:-;;;;;;;;;;;;;:::i;650:23:11:-;;;;;;;;;;;;;;;;;;;2053:25:12;;;2041:2;2026:18;650:23:11;;;;;;;;1462:85:0;;;;;;;;;;-1:-1:-1;1534:6:0;;-1:-1:-1;;;;;1534:6:0;1462:85;;;-1:-1:-1;;;;;2253:55:12;;;2235:74;;2223:2;2208:18;1462:85:0;2089:226:12;1503:213:11;;;;;;;;;;-1:-1:-1;1503:213:11;;;;;:::i;:::-;;:::i;3520:273::-;;;;;;;;;;-1:-1:-1;3520:273:11;;;;;:::i;:::-;;:::i;3799:388::-;;;;;;;;;;-1:-1:-1;3799:388:11;;;;;:::i;:::-;;:::i;:::-;;;;3427:25:12;;;3483:2;3468:18;;3461:34;;;;3543:4;3531:17;3511:18;;;3504:45;3415:2;3400:18;3799:388:11;3229:326:12;1098:281:11;;;;;;;;;;-1:-1:-1;1098:281:11;;;;;:::i;:::-;;:::i;680:42::-;;;;;;;;;;-1:-1:-1;680:42:11;;;;;:::i;:::-;;;;;;;;;;;;;;3028:223;;;;;;;;;;-1:-1:-1;3028:223:11;;;;;:::i;:::-;3192:51;;-1:-1:-1;;8321:2:12;8317:15;;;8313:88;3192:51:11;;;8301:101:12;8418:12;;;8411:28;;;8455:12;;;8448:28;;;3156:7:11;;8492:12:12;;3192:51:11;;;;;;;;;;;;3182:62;;;;;;3175:69;;3028:223;;;;;;549:36;;;;;;;;;;-1:-1:-1;549:36:11;;;;-1:-1:-1;;;;;549:36:11;;;618:26;;;;;;;;;;;;;;;;2335:198:0;;;;;;;;;;-1:-1:-1;2335:198:0;;;;;:::i;:::-;;:::i;3257:256:11:-;;;;;;;;;;-1:-1:-1;3257:256:11;;;;;:::i;:::-;3426:66;;9164::12;3426::11;;;9152:79:12;9247:12;;;9240:28;;;3357:7:11;;9284:12:12;;3426:66:11;;;;;;;;;;;;3399:107;;;;;;3380:126;;3257:256;;;;2043:979;2221:14;;2202:15;:33;;2194:57;;;;-1:-1:-1;;;2194:57:11;;4456:2:12;2194:57:11;;;4438:21:12;4495:2;4475:18;;;4468:30;4534:13;4514:18;;;4507:41;4565:18;;2194:57:11;;;;;;;;;2270:10;-1:-1:-1;;;;;2270:19:11;;;2261:47;;;;-1:-1:-1;;;2261:47:11;;4796:2:12;2261:47:11;;;4778:21:12;4835:2;4815:18;;;4808:30;4874:16;4854:18;;;4847:44;4908:18;;2261:47:11;4594:338:12;2261:47:11;2327:21;;-1:-1:-1;;;;;2327:21:11;2318:85;;;;-1:-1:-1;;;2318:85:11;;5139:2:12;2318:85:11;;;5121:21:12;5178:2;5158:18;;;5151:30;5217:34;5197:18;;;5190:62;5288:6;5268:18;;;5261:34;5312:19;;2318:85:11;4937:400:12;2318:85:11;2440:10;2432:19;;;;:7;:19;;;;;;2419:32;;2414:602;;;3192:51;;;8321:2:12;8317:15;;;-1:-1:-1;;8313:88:12;3192:51:11;;;;8301:101:12;;;;8418:12;;;8411:28;;;8455:12;;;;8448:28;;;3192:51:11;;;;;;;;;;8492:12:12;;;3192:51:11;;3182:62;;;;;;9164:66:12;3426::11;;;9152:79:12;9247:12;;;;9240:28;;;3426:66:11;;;;;;;;;;9284:12:12;;;;3426:66:11;;;3399:107;;;;;2704:21;;-1:-1:-1;;;;;2704:21:11;2654:46;3399:107;2690:9;2654:13;:46::i;:::-;-1:-1:-1;;;;;2654:71:11;;2645:104;;;;-1:-1:-1;;;2645:104:11;;5544:2:12;2645:104:11;;;5526:21:12;5583:2;5563:18;;;5556:30;5622:21;5602:18;;;5595:49;5661:18;;2645:104:11;5342:343:12;2645:104:11;2826:10;2776:26;2818:19;;;:7;:19;;;;;;2805:32;;:10;:32;:::i;:::-;2859:10;2851:19;;;;:7;:19;;;;;;;;;:32;;;2950:55;;2968:15;6186:25:12;;6227:18;;;6220:34;;;2776:61:11;;-1:-1:-1;2859:10:11;;2950:55;;6159:18:12;2950:55:11;;;;;;;2454:562;;;2414:602;2043:979;;;;:::o;1838:199::-;1915:9;1904:7;:20;1896:55;;;;-1:-1:-1;;;1896:55:11;;6467:2:12;1896:55:11;;;6449:21:12;6506:2;6486:18;;;6479:30;6545:24;6525:18;;;6518:52;6587:18;;1896:55:11;6265:346:12;1896:55:11;1976:7;1961:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;1998:32:11;;;2005:15;6186:25:12;;6242:2;6227:18;;6220:34;;;1998:32:11;;6159:18:12;1998:32:11;;;;;;;1838:199;:::o;2085:101:0:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;1503:213:11:-;1355:13:0;:11;:13::i;:::-;1600:21:11::1;:46:::0;;-1:-1:-1;;1600:46:11::1;-1:-1:-1::0;;;;;1600:46:11;::::1;::::0;;::::1;::::0;;;1661:48:::1;::::0;::::1;::::0;-1:-1:-1;;1661:48:11::1;1503:213:::0;:::o;3520:273::-;3644:7;3668:9;3679;3690:7;3701:26;3716:10;3701:14;:26::i;:::-;3745:41;;;;;;;;;;;;6973:25:12;;;7046:4;7034:17;;7014:18;;;7007:45;;;;7068:18;;;7061:34;;;7111:18;;;7104:34;;;3667:60:11;;-1:-1:-1;3667:60:11;;-1:-1:-1;3667:60:11;-1:-1:-1;3745:41:11;;6945:19:12;;3745:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3738:48;;;;;3520:273;;;;;:::o;3799:388::-;3899:9;3922;3945:7;3985:3;:10;3999:2;3985:16;3977:53;;;;-1:-1:-1;;;3977:53:11;;7351:2:12;3977:53:11;;;7333:21:12;7390:2;7370:18;;;7363:30;7429:26;7409:18;;;7402:54;7473:18;;3977:53:11;7149:348:12;3977:53:11;-1:-1:-1;;;4084:2:11;4075:12;;4069:19;4121:2;4112:12;;4106:19;4166:2;4157:12;;;4151:19;4069;;4148:1;4143:28;;;;;3799:388::o;1098:281::-;3279:19:1;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:1;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:1;1713:19:5;:23;;;3387:66:1;;-1:-1:-1;3436:12:1;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:1;;7704:2:12;3325:201:1;;;7686:21:12;7743:2;7723:18;;;7716:30;7782:34;7762:18;;;7755:62;7853:16;7833:18;;;7826:44;7887:19;;3325:201:1;7502:410:12;3325:201:1;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:1;;;;;3562:65;1193:16:11::1;:14;:16::i;:::-;1220:21;:46:::0;;-1:-1:-1;;1220:46:11::1;-1:-1:-1::0;;;;;1220:46:11;::::1;::::0;;::::1;::::0;;;1293:15:::1;1276:14;:32:::0;1324:48:::1;::::0;::::1;::::0;-1:-1:-1;;1324:48:11::1;3651:14:1::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:1;;;3721:14;;-1:-1:-1;8069:36:12;;3721:14:1;;8057:2:12;8042:18;3721:14:1;;;;;;;3647:99;3269:483;1098:281:11;:::o;2335:198:0:-;1355:13;:11;:13::i;:::-;-1:-1:-1;;;;;2423:22:0;::::1;2415:73;;;::::0;-1:-1:-1;;;2415:73:0;;8717:2:12;2415:73:0::1;::::0;::::1;8699:21:12::0;8756:2;8736:18;;;8729:30;8795:34;8775:18;;;8768:62;8866:8;8846:18;;;8839:36;8892:19;;2415:73:0::1;8515:402:12::0;2415:73:0::1;2498:28;2517:8;2498:18;:28::i;:::-;2335:198:::0;:::o;1620:130::-;1534:6;;-1:-1:-1;;;;;1534:6:0;965:10:6;1683:23:0;1675:68;;;;-1:-1:-1;;;1675:68:0;;9509:2:12;1675:68:0;;;9491:21:12;;;9528:18;;;9521:30;9587:34;9567:18;;;9560:62;9639:18;;1675:68:0;9307:356:12;2687:187:0;2779:6;;;-1:-1:-1;;;;;2795:17:0;;;-1:-1:-1;;2795:17:0;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;1024:95::-;5374:13:1;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:1;;9870:2:12;5366:69:1;;;9852:21:12;9909:2;9889:18;;;9882:30;9948:34;9928:18;;;9921:62;10019:13;9999:18;;;9992:41;10050:19;;5366:69:1;9668:407:12;5366:69:1;1086:26:0::1;5374:13:1::0;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:1;;9870:2:12;5366:69:1;;;9852:21:12;9909:2;9889:18;;;9882:30;9948:34;9928:18;;;9921:62;10019:13;9999:18;;;9992:41;10050:19;;5366:69:1;9668:407:12;5366:69:1;1197:32:0::1;965:10:6::0;1197:18:0::1;:32::i;14:196:12:-:0;82:20;;-1:-1:-1;;;;;131:54:12;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:184::-;267:77;264:1;257:88;364:4;361:1;354:15;388:4;385:1;378:15;404:777;446:5;499:3;492:4;484:6;480:17;476:27;466:55;;517:1;514;507:12;466:55;553:6;540:20;579:18;616:2;612;609:10;606:36;;;622:18;;:::i;:::-;756:2;750:9;818:4;810:13;;661:66;806:22;;;830:2;802:31;798:40;786:53;;;854:18;;;874:22;;;851:46;848:72;;;900:18;;:::i;:::-;940:10;936:2;929:22;975:2;967:6;960:18;1021:3;1014:4;1009:2;1001:6;997:15;993:26;990:35;987:55;;;1038:1;1035;1028:12;987:55;1102:2;1095:4;1087:6;1083:17;1076:4;1068:6;1064:17;1051:54;1149:1;1142:4;1137:2;1129:6;1125:15;1121:26;1114:37;1169:6;1160:15;;;;;;404:777;;;;:::o;1186:531::-;1281:6;1289;1297;1305;1358:3;1346:9;1337:7;1333:23;1329:33;1326:53;;;1375:1;1372;1365:12;1326:53;1398:29;1417:9;1398:29;:::i;:::-;1388:39;;1474:2;1463:9;1459:18;1446:32;1436:42;;1525:2;1514:9;1510:18;1497:32;1487:42;;1580:2;1569:9;1565:18;1552:32;1607:18;1599:6;1596:30;1593:50;;;1639:1;1636;1629:12;1593:50;1662:49;1703:7;1694:6;1683:9;1679:22;1662:49;:::i;:::-;1652:59;;;1186:531;;;;;;;:::o;1722:180::-;1781:6;1834:2;1822:9;1813:7;1809:23;1805:32;1802:52;;;1850:1;1847;1840:12;1802:52;-1:-1:-1;1873:23:12;;1722:180;-1:-1:-1;1722:180:12:o;2320:186::-;2379:6;2432:2;2420:9;2411:7;2407:23;2403:32;2400:52;;;2448:1;2445;2438:12;2400:52;2471:29;2490:9;2471:29;:::i;:::-;2461:39;2320:186;-1:-1:-1;;;2320:186:12:o;2511:388::-;2588:6;2596;2649:2;2637:9;2628:7;2624:23;2620:32;2617:52;;;2665:1;2662;2655:12;2617:52;2701:9;2688:23;2678:33;;2762:2;2751:9;2747:18;2734:32;2789:18;2781:6;2778:30;2775:50;;;2821:1;2818;2811:12;2775:50;2844:49;2885:7;2876:6;2865:9;2861:22;2844:49;:::i;:::-;2834:59;;;2511:388;;;;;:::o;2904:320::-;2972:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:52;;;3041:1;3038;3031:12;2993:52;3081:9;3068:23;3114:18;3106:6;3103:30;3100:50;;;3146:1;3143;3136:12;3100:50;3169:49;3210:7;3201:6;3190:9;3186:22;3169:49;:::i;:::-;3159:59;2904:320;-1:-1:-1;;;;2904:320:12:o;3560:322::-;3637:6;3645;3653;3706:2;3694:9;3685:7;3681:23;3677:32;3674:52;;;3722:1;3719;3712:12;3674:52;3745:29;3764:9;3745:29;:::i;:::-;3735:39;3821:2;3806:18;;3793:32;;-1:-1:-1;3872:2:12;3857:18;;;3844:32;;3560:322;-1:-1:-1;;;3560:322:12:o;5690:184::-;5742:77;5739:1;5732:88;5839:4;5836:1;5829:15;5863:4;5860:1;5853:15;5879:128;5946:9;;;5967:11;;;5964:37;;;5981:18;;:::i;6616:125::-;6681:9;;;6702:10;;;6699:36;;;6715:18;;:::i"},"methodIdentifiers":{"claim(address,uint256,uint256,bytes)":"2ada8a32","claimed(address)":"c884ef83","fill(uint256)":"3fda5389","getEthSignedMessageHash(bytes32)":"fa540801","getMessageHash(address,uint256,uint256)":"d2b0737b","initialize(address)":"c4d66de8","intentxTrustedAddress()":"d7a105ec","owner()":"8da5cb5b","recoverSigner(bytes32,bytes)":"97aba7f9","renounceOwnership()":"715018a6","setIntentxTrustedAddress(address)":"96b18c12","splitSignature(bytes)":"a7bb5803","startTimestamp()":"e6fd48bc","totalReward()":"750142e6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DayNotFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"intentxTrustedAddress\",\"type\":\"address\"}],\"name\":\"SetIntentXTrustedAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountMnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fill\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIntentX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_intentxTrustedAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"intentxTrustedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_intentxTrustedAddress\",\"type\":\"address\"}],\"name\":\"setIntentxTrustedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"fill(uint256)\":{\"params\":{\"_amount\":\"amount of reward to fill\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setIntentxTrustedAddress(address)\":{\"params\":{\"_intentxTrustedAddress\":\"address of the new IntentX Trusted Backend\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fill(uint256)\":{\"notice\":\"Fill reward for a given day from the token contract\"},\"initialize(address)\":{\"notice\":\"Initialize the contract\"},\"setIntentxTrustedAddress(address)\":{\"notice\":\"Set the reward token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IntentxFeeRebate.sol\":\"IntentXFeeRebate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2048},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/IntentxFeeRebate.sol\":{\"keccak256\":\"0x68af3bf12fd93d27797066df116158cb88527b93015e29f730178c5117b86ff0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4db744f7c915c090d5c8158fbc2c12680a8dfb2d98adf7e5cc63f110cbf24182\",\"dweb:/ipfs/QmSV5aTgJQYMRQ5A5yETaVXJ7NFsJteh84g3G4kU7ZKYLw\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1171,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":11,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":131,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":2755,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"intentxTrustedAddress","offset":0,"slot":"101","type":"t_address"},{"astId":2757,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"startTimestamp","offset":0,"slot":"102","type":"t_uint256"},{"astId":2759,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"totalReward","offset":0,"slot":"103","type":"t_uint256"},{"astId":2763,"contract":"contracts/IntentxFeeRebate.sol:IntentXFeeRebate","label":"claimed","offset":0,"slot":"104","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}